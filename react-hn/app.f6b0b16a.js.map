{"version":3,"sources":["webpack:///./src/mixins/PageNumberMixin.js","webpack:///./src/Comment.js","webpack:///./src/stores/ItemStore.js","webpack:///./src/utils/storage.js","webpack:///./src/services/HNService.js","webpack:///./src/NotFound.js","webpack:///./src/UserProfile.js","webpack:///./src/PermalinkedComment.js","webpack:///./src/DisplayComment.js","webpack:///./src/DisplayListItem.js","webpack:///./src/Updates.js","webpack:///./src/StoryListItem.js","webpack:///./src/Stories.js","webpack:///./src/Settings.js","webpack:///./src/App.js","webpack:///./src/PollOption.js","webpack:///./src/utils/cancellableDebounce.js","webpack:///./src/Item.js","webpack:///./src/routes.js","webpack:///./src/Spinner.js","webpack:///./src/index.js","webpack:///./src/utils/setTitle.js","webpack:///./src/utils/buildClassName.js","webpack:///./src/utils/pluralise.js","webpack:///./src/utils/extend.js","webpack:///./src/utils/constants.js","webpack:///./src/stores/UpdatesStore.js","webpack:///./src/stores/StoryStore.js","webpack:///./src/mixins/ItemMixin.js","webpack:///./src/mixins/CommentMixin.js","webpack:///./src/stores/CommentThreadStore.js","webpack:///./src/stores/StoryCommentThreadStore.js","webpack:///./src/stores/SettingsStore.js","webpack:///./src/utils/pageCalc.js","webpack:///./src/mixins/ListItemMixin.js","webpack:///./src/Paginator.js"],"names":["__webpack_require__","r","__webpack_exports__","PageNumberMixin","getPageNumber","page","this","props","location","query","test","Math","max","Number","React","require","ReactFireMixin","CommentThreadStore","default","HNService","SettingsStore","CommentMixin","cx","Comment","createClass","displayName","mixins","propTypes","id","PropTypes","number","isRequired","level","loadingSpinner","bool","threadStore","instanceOf","getDefaultProps","getInitialState","comment","componentWillMount","bindFirebaseRef","componentWillUnmount","clearDelayTimeout","componentDidUpdate","prevProps","prevState","state","deleted","commentDeleted","dead","commentDied","loading","kids","length","prevKids","adjustExpectedComments","delayed","commentAdded","commentDelayed","bindAsObject","itemRef","handleFirebaseRefCancelled","timeout","e","unbind","setTimeout","forceUpdate","clearTimeout","toggleCollapse","preventDefault","render","renderError","className","renderCommentLoading","showDead","showDeleted","renderCommentDeleted","isNew","collapsed","isCollapsed","childCounts","getChildCounts","newComments","Comment--collapsed","Comment--dead","Comment--new","createElement","renderCommentMeta","collapsible","link","renderCommentText","replyLink","map","key","setImmediate","StoryStore","UpdatesStore","commentParentLookup","titleCache","fetchCommentParent","cb","result","commentId","parentId","parent","itemCount","cacheHits","op","type","ItemStore","getItem","item","title","processCommentParent","cachedItem","getCachedItem","fetchItem","getCachedStory","getStory","fetchCommentAncestors","startTime","Date","now","timeTaken","get","defaultValue","value","window","localStorage","set","firebase","initializeApp","databaseURL","api","database","ref","once","snapshot","val","child","fetchItems","ids","items","addItem","push","forEach","storiesRef","path","userRef","updatesRef","NotFound","_ref","TimeAgo","Spinner","setTitle","size","UserProfile","user","params","componentWillUpdate","nextProps","nextState","componentWillReceiveProps","createdDate","created","_ref2","date","toDateString","_ref3","karma","_ref4","delay","about","_ref5","dangerouslySetInnerHTML","__html","withRouter","PermalinkedComment","getComment","commentLoaded","setState","router","replace","itemId","handleCommentsChanged","fetchAncestors","by","payload","index","DisplayComment","object","StoryCommentThreadStore","ItemMixin","ListItemMixin","DisplayListItem","threadState","loadState","renderListItem","Paginator","ITEMS_PER_PAGE","pageCalc","filterDead","filterUpdates","updates","comments","filter","stories","Updates","getUpdates","start","on","handleUpdates","off","stop","isMounted","slice","startIndex","endIndex","route","pageNum","hasNext","StoryListItem","store","initLiveItem","removeListener","updateThreadState","itemUpdated","addListener","style","marginBottom","listSpacing","Stories","limit","string","componentDidMount","handleUpdate","getState","update","dummyItems","i","renderItems","rendered","htmlFor","Settings","refs","container","focus","onChange","el","target","name","checked","save","onClick","stopPropagation","tabIndex","autoCollapse","replyLinks","min","step","titleFontSize","_ref6","Link","to","src","width","height","alt","activeClassName","href","App","showSettings","load","loadSession","addEventListener","handleBeforeUnload","removeEventListener","saveSession","toggleSettings","_ref7","_ref8","_ref9","onKeyPress","_ref10","children","_ref11","pluralise","PollOption","pollopt","text","score","cancellableDebounce","func","wait","immediate","args","context","timestamp","later","last","apply","debounced","arguments","callNow","cancel","timeUnitsAgo","unit","suffix","Item","cached","dispose","kidDiff","collapseThreadsWithoutNewComments","markAsRead","getButtonLabel","showCommentsAfter","showNewCommentsAfter","commentCount","howMany","timeComment","getCommentByTimeIndex","time","highlightRecentComments","highlightNewCommentsSince","_this","Item--dead","renderItemTitle","renderItemMeta","lastVisit","newCommentCount","formatter","marginTop","opacity","transition","margin","verticalAlign","parts","IndexRoute","Route","_extends","Ask","Comments","Jobs","New","Show","Best","Top","Read","component","spacing","bounceSize","bounceStyle","marginRight","react_router__WEBPACK_IMPORTED_MODULE_0__","Router","useScroll","applyRouterMiddleware","routes","history","hashHistory","document","getElementById","SITE_TITLE","buildClassName","staticClassName","conditionalClassNames","classNames","classNameKeys","Object","keys","l","join","suffixes","split","extend","dest","src1","src2","UPDATES_CACHE_SIZE","EventEmitter","updatesCache","sortByTimeDesc","a","b","populateUpdates","processCacheObj","cacheObj","arr","obj","sort","cacheObjToSortedArray","splice","updateItemTypes","job","poll","story","handleUpdateItems","emit","json","sessionStorage","JSON","parse","stringify","ID_REGEXP","firebaseRef","idCache","itemCache","storyLists","populateStoryList","storyList","parseJSON","_classCallCheck","_possibleConstructorReturn","_EventEmitter","call","onStorage","bind","onStoriesUpdated","_this2","readStoryIds","urlParse","extraContent","itemDate","descendants","url","hasURL","fontSize","hostname","shift","options","renderCollapseControl","onCommentsChanged","deadComments","prototype","childCount","nodes","nextNodes","nodeChildren","siblings","indexOf","debounce","storage","maxCommentId","startedLoading","parents","expectedComments","itemDescendantCount","initialState","prevMaxCommentId","isFirstVisit","checkLoadCompletion","create","constructor","numberOfCommentsChanged","firstLoadComplete","_storeState","change","newCommentIds","hasNewComments","shouldCollapse","commentIds","nextCommentIds","childCommentIds","timeIndex","sortedCommentIds","referenceComment","pageSize","numItems","getNewCommentCount","ListItem--dead","_onClick","scrollTo","pathname"],"mappings":"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","file":"app.f6b0b16a.js","sourcesContent":["var PageNumberMixin = {\r\n  getPageNumber(page) {\r\n    if (typeof page == 'undefined') {\r\n      page = this.props.location.query.page\r\n    }\r\n    return (page && /^\\d+$/.test(page) ? Math.max(1, Number(page)) : 1)\r\n  }\r\n}\r\n\r\nexport default PageNumberMixin\r\n","var React = require('react')\r\nvar ReactFireMixin = require('reactfire')\r\n\r\nvar CommentThreadStore = require('./stores/CommentThreadStore').default\r\nvar HNService = require('./services/HNService').default\r\nvar SettingsStore = require('./stores/SettingsStore').default\r\n\r\nvar CommentMixin = require('./mixins/CommentMixin').default\r\n\r\nvar cx = require('./utils/buildClassName').default\r\n\r\n/**\r\n * A comment in a thread.\r\n */\r\nvar Comment = React.createClass({\r\n  mixins: [CommentMixin, ReactFireMixin],\r\n\r\n  propTypes: {\r\n    id: React.PropTypes.number.isRequired,\r\n    level: React.PropTypes.number.isRequired,\r\n    loadingSpinner: React.PropTypes.bool,\r\n    threadStore: React.PropTypes.instanceOf(CommentThreadStore).isRequired\r\n  },\r\n\r\n  getDefaultProps() {\r\n    return {\r\n      loadingSpinner: false\r\n    }\r\n  },\r\n\r\n  getInitialState() {\r\n    return {\r\n      comment: {}\r\n    }\r\n  },\r\n\r\n  componentWillMount() {\r\n    this.bindFirebaseRef()\r\n  },\r\n\r\n  componentWillUnmount() {\r\n    this.clearDelayTimeout()\r\n  },\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // Huge, fast-growing threads like https://news.ycombinator.com/item?id=9784470\r\n    // seem to break the API - some comments are coming back from Firebase as null.\r\n    if (!this.state.comment) {\r\n      this.props.threadStore.adjustExpectedComments(-1)\r\n      return\r\n    }\r\n\r\n    // On !prevState.comment: a comment which was initially null - see\r\n    // above - may eventually load when the API catches up.\r\n    if (!prevState.comment || !prevState.comment.id) {\r\n      // Register a newly-loaded comment with the thread store\r\n      if (this.state.comment.id) {\r\n        // If the comment was delayed, cancel any pending timeout\r\n        if (prevState.comment && prevState.comment.delayed) {\r\n          this.clearDelayTimeout()\r\n        }\r\n        this.props.threadStore.commentAdded(this.state.comment)\r\n      }\r\n      if (prevState.comment && !prevState.comment.delayed && this.state.comment.delayed) {\r\n        this.props.threadStore.commentDelayed(this.props.id)\r\n      }\r\n    }\r\n    // The comment was already loaded, look for changes to it\r\n    else {\r\n      if (!prevState.comment.deleted && this.state.comment.deleted) {\r\n        this.props.threadStore.commentDeleted(this.state.comment)\r\n      }\r\n      if (!prevState.comment.dead && this.state.comment.dead) {\r\n        this.props.threadStore.commentDied(this.state.comment)\r\n      }\r\n      // If the comment has been updated and the initial set of comments is\r\n      // still loading, the number of expected comments might need to be\r\n      // adjusted.\r\n      else if (prevState.comment !== this.state.comment &&\r\n               this.props.threadStore.loading) {\r\n        var kids = (this.state.comment.kids ? this.state.comment.kids.length : 0)\r\n        var prevKids = (prevState.comment.kids ? prevState.comment.kids.length : 0)\r\n        this.props.threadStore.adjustExpectedComments(kids - prevKids)\r\n      }\r\n    }\r\n  },\r\n\r\n  bindFirebaseRef() {\r\n    this.bindAsObject(HNService.itemRef(this.props.id), 'comment', this.handleFirebaseRefCancelled)\r\n    if (this.timeout) {\r\n      this.timeout = null\r\n    }\r\n  },\r\n\r\n  /**\r\n   * This is usually caused by a permissions error loading the comment due to\r\n   * its author using the delay setting (note: this is conjecture), which is\r\n   * measured in minutes - try again in 30 seconds.\r\n   */\r\n  handleFirebaseRefCancelled(e) {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      console.error('Firebase ref for comment ' + this.props.id + ' was cancelled: ' + e.message)\r\n    }\r\n    this.unbind('comment')\r\n    this.timeout = setTimeout(this.bindFirebaseRef, 30000)\r\n    if (this.state.comment && !this.state.comment.delayed) {\r\n      this.state.comment.delayed = true\r\n      this.forceUpdate()\r\n    }\r\n  },\r\n\r\n  clearDelayTimeout() {\r\n    if (this.timeout) {\r\n      clearTimeout(this.timeout)\r\n      this.timeout = null\r\n    }\r\n  },\r\n\r\n  toggleCollapse(e) {\r\n    e.preventDefault()\r\n    this.props.threadStore.toggleCollapse(this.state.comment.id)\r\n  },\r\n\r\n  render() {\r\n    var comment = this.state.comment\r\n    var props = this.props\r\n    if (!comment) {\r\n      return this.renderError(comment, {\r\n        id: this.props.id,\r\n        className: 'Comment Comment--error Comment--level' + props.level\r\n      })\r\n    }\r\n    // Render a placeholder while we're waiting for the comment to load\r\n    if (!comment.id) { return this.renderCommentLoading(comment) }\r\n    // Don't show dead coments or their children, when configured\r\n    if (comment.dead && !SettingsStore.showDead) { return null }\r\n    // Render a link to HN for deleted comments if they're being displayed\r\n    if (comment.deleted) {\r\n      if (!SettingsStore.showDeleted) { return null }\r\n      return this.renderCommentDeleted(comment, {\r\n        className: 'Comment Comment--deleted Comment--level' + props.level\r\n      })\r\n    }\r\n\r\n    var isNew = props.threadStore.isNew[comment.id]\r\n    var collapsed = !!props.threadStore.isCollapsed[comment.id]\r\n    var childCounts = (collapsed && props.threadStore.getChildCounts(comment))\r\n    if (collapsed && isNew) { childCounts.newComments = 0 }\r\n    var className = cx('Comment Comment--level' + props.level, {\r\n      'Comment--collapsed': collapsed,\r\n      'Comment--dead': comment.dead,\r\n      'Comment--new': isNew\r\n    })\r\n\r\n    return <div className={className}>\r\n      <div className=\"Comment__content\">\r\n        {this.renderCommentMeta(comment, {\r\n          collapsible: true,\r\n          collapsed: collapsed,\r\n          link: true,\r\n          childCounts: childCounts\r\n        })}\r\n        {this.renderCommentText(comment, {replyLink: true})}\r\n      </div>\r\n      {comment.kids && <div className=\"Comment__kids\">\r\n        {comment.kids.map(function(id) {\r\n          return <Comment key={id} id={id}\r\n            level={props.level + 1}\r\n            loadingSpinner={props.loadingSpinner}\r\n            threadStore={props.threadStore}\r\n          />\r\n        })}\r\n      </div>}\r\n    </div>\r\n  }\r\n})\r\n\r\nexport default Comment\r\n","var HNService = require('../services/HNService').default\r\n\r\nvar StoryStore = require('./StoryStore').default\r\nvar UpdatesStore = require('./UpdatesStore').default\r\nvar commentParentLookup = {}\r\nvar titleCache = {}\r\n\r\nfunction fetchCommentParent(comment, cb, result) {\r\n  var commentId = comment.id\r\n  var parentId = comment.parent\r\n\r\n  while (commentParentLookup[parentId] || titleCache[parentId]) {\r\n    // We just saved ourselves an item fetch\r\n    result.itemCount++\r\n    result.cacheHits++\r\n\r\n    // The parent is a known non-comment\r\n    if (titleCache[parentId]) {\r\n      if (result.itemCount === 1) { result.parent = titleCache[parentId] }\r\n      result.op = titleCache[parentId]\r\n      cb(result)\r\n      return\r\n    }\r\n\r\n    // The parent is a known comment\r\n    if (commentParentLookup[parentId]) {\r\n      if (result.itemCount === 1) { result.parent = {id: parentId, type: 'comment'} }\r\n      // Set the parent comment's ids up for the next iteration\r\n      commentId = parentId\r\n      parentId = commentParentLookup[parentId]\r\n    }\r\n  }\r\n\r\n  // The parent of the current comment isn't known, so we'll have to fetch it\r\n  ItemStore.getItem(parentId, function(parent) {\r\n    result.itemCount++\r\n    // Add the current comment's parent to the lookup for next time\r\n    commentParentLookup[commentId] = parentId\r\n    if (parent.type === 'comment') {\r\n      commentParentLookup[parent.id] = parent.parent\r\n    }\r\n    processCommentParent(parent, cb, result)\r\n  }, result)\r\n}\r\n\r\nfunction processCommentParent(item, cb, result) {\r\n  if (result.itemCount === 1) {\r\n    result.parent = item\r\n  }\r\n  if (item.type !== 'comment') {\r\n    result.op = item\r\n    titleCache[item.id] = {\r\n      id: item.id,\r\n      type: item.type,\r\n      title: item.title\r\n    }\r\n    cb(result)\r\n  }\r\n  else {\r\n    fetchCommentParent(item, cb, result)\r\n  }\r\n}\r\n\r\nvar ItemStore = {\r\n  getItem(id, cb, result) {\r\n    var cachedItem = this.getCachedItem(id)\r\n    if (cachedItem) {\r\n      if (result) {\r\n        result.cacheHits++\r\n      }\r\n      setImmediate(cb, cachedItem)\r\n    }\r\n    else {\r\n      HNService.fetchItem(id, cb)\r\n    }\r\n  },\r\n\r\n  getCachedItem(id) {\r\n    return StoryStore.getItem(id) || UpdatesStore.getItem(id) || null\r\n  },\r\n\r\n  getCachedStory(id) {\r\n    return StoryStore.getItem(id) || UpdatesStore.getStory(id) || null\r\n  },\r\n\r\n  fetchCommentAncestors(comment, cb) {\r\n    var startTime = Date.now()\r\n    var result = {itemCount: 0, cacheHits: 0}\r\n    fetchCommentParent(comment, function() {\r\n      result.timeTaken = Date.now() - startTime\r\n      setImmediate(cb, result)\r\n    }, result)\r\n  }\r\n}\r\n\r\nexport default ItemStore\r\n","export default {\r\n  get(key, defaultValue) {\r\n    var value = window.localStorage[key]\r\n    return (typeof value != 'undefined' ? value : defaultValue)\r\n  },\r\n  set(key, value) {\r\n    window.localStorage[key] = value\r\n  }\r\n}\r\n","var firebase = require('firebase/app')\r\nrequire('firebase/database')\r\n\r\nvar config = {\r\n  databaseURL: 'https://hacker-news.firebaseio.com'\r\n}\r\nfirebase.initializeApp(config)\r\nvar version = '/v0'\r\nvar api = firebase.database().ref(version)\r\n\r\n// https://firebase.google.com/support/guides/firebase-web\r\n\r\nfunction fetchItem(id, cb) {\r\n  itemRef(id).once('value', function(snapshot) {\r\n    cb(snapshot.val())\r\n  })\r\n}\r\n\r\nfunction fetchItems(ids, cb) {\r\n  var items = []\r\n  ids.forEach(function(id) {\r\n    fetchItem(id, addItem)\r\n  })\r\n  function addItem(item) {\r\n    items.push(item)\r\n    if (items.length >= ids.length) {\r\n      cb(items)\r\n    }\r\n  }\r\n}\r\n\r\nfunction storiesRef(path) {\r\n  return api.child(path)\r\n}\r\n\r\nfunction itemRef(id) {\r\n  return api.child('item/' + id)\r\n}\r\n\r\nfunction userRef(id) {\r\n  return api.child('user/' + id)\r\n}\r\n\r\nfunction updatesRef() {\r\n  return api.child('updates/items')\r\n}\r\n\r\nexport default {\r\n  fetchItem,\r\n  fetchItems,\r\n  storiesRef,\r\n  itemRef,\r\n  userRef,\r\n  updatesRef\r\n}\r\n","var React = require('react')\r\n\r\nvar NotFound = React.createClass({\r\n  render() {\r\n    return <h2>Not found</h2>\r\n  }\r\n})\r\n\r\nexport default NotFound\r\n","var React = require('react')\r\nvar ReactFireMixin = require('reactfire')\r\nvar TimeAgo = require('react-timeago').default\r\n\r\nvar HNService = require('./services/HNService').default\r\n\r\nvar Spinner = require('./Spinner').default\r\n\r\nvar setTitle = require('./utils/setTitle').default\r\n\r\n// TODO User submissions\r\n\r\n// TODO User comments\r\n\r\nvar UserProfile = React.createClass({\r\n  mixins: [ReactFireMixin],\r\n  getInitialState() {\r\n    return {user: {}}\r\n  },\r\n\r\n  componentWillMount() {\r\n    this.bindAsObject(HNService.userRef(this.props.params.id), 'user')\r\n  },\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (this.state.user.id !== nextState.user.id) {\r\n      setTitle('Profile: ' + nextState.user.id)\r\n    }\r\n  },\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.params.id !== nextProps.params.id) {\r\n      this.unbind('user')\r\n      this.bindAsObject(HNService.userRef(nextProps.params.id), 'user')\r\n    }\r\n  },\r\n\r\n  render() {\r\n    var user = this.state.user\r\n    if (!user.id) {\r\n      return <div className=\"UserProfile UserProfile--loading\">\r\n        <h4>{this.props.params.id}</h4>\r\n        <Spinner size=\"20\"/>\r\n      </div>\r\n    }\r\n    var createdDate = new Date(user.created * 1000)\r\n    return <div className=\"UserProfile\">\r\n      <h4>{user.id}</h4>\r\n      <dl>\r\n        <dt>Created</dt>\r\n        <dd><TimeAgo date={createdDate}/> ({createdDate.toDateString()})</dd>\r\n        <dt>Karma</dt>\r\n        <dd>{user.karma}</dd>\r\n        <dt>Delay</dt>\r\n        <dd>{user.delay}</dd>\r\n        {user.about && <dt>About</dt>}\r\n        {user.about && <dd><div className=\"UserProfile__about\" dangerouslySetInnerHTML={{__html: user.about}}/></dd>}\r\n      </dl>\r\n    </div>\r\n  }\r\n})\r\n\r\nexport default UserProfile\r\n","var React = require('react')\r\nvar ReactFireMixin = require('reactfire')\r\nvar withRouter = require('react-router/lib/withRouter')\r\n\r\nvar CommentThreadStore = require('./stores/CommentThreadStore').default\r\nvar HNService = require('./services/HNService').default\r\nvar SettingsStore = require('./stores/SettingsStore').default\r\nvar UpdatesStore = require('./stores/UpdatesStore').default\r\n\r\nvar Comment = require('./Comment').default\r\nvar CommentMixin = require('./mixins/CommentMixin').default\r\n\r\nvar cx = require('./utils/buildClassName').default\r\nvar setTitle = require('./utils/setTitle').default\r\n\r\nvar PermalinkedComment = React.createClass({\r\n  mixins: [CommentMixin, ReactFireMixin],\r\n\r\n  getDefaultProps() {\r\n    return {\r\n      level: 0,\r\n      loadingSpinner: true\r\n    }\r\n  },\r\n\r\n  getInitialState() {\r\n    return {\r\n      comment: UpdatesStore.getComment(this.props.params.id) || {},\r\n      parent: {type: 'comment'},\r\n      op: {}\r\n    }\r\n  },\r\n\r\n  componentWillMount() {\r\n    this.bindAsObject(HNService.itemRef(this.props.params.id), 'comment')\r\n    if (this.state.comment.id) {\r\n      this.commentLoaded(this.state.comment)\r\n    }\r\n  },\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.params.id !== this.props.params.id) {\r\n      var comment = UpdatesStore.getComment(nextProps.params.id)\r\n      if (comment) {\r\n        this.commentLoaded(comment)\r\n        this.setState({comment: comment})\r\n      }\r\n      this.unbind('comment')\r\n      this.bindAsObject(HNService.itemRef(nextProps.params.id), 'comment')\r\n    }\r\n  },\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (!nextState.comment) {\r\n      return\r\n    }\r\n\r\n    if (this.state.comment.id !== nextState.comment.id) {\r\n      if (!nextState.comment.deleted) {\r\n        // Redirect to the appropriate route if a Comment \"parent\" link had a\r\n        // non-comment item id.\r\n        if (nextState.comment.type !== 'comment') {\r\n          this.props.router.replace(`/${nextState.comment.type}/${nextState.comment.id}`)\r\n          return\r\n        }\r\n      }\r\n      if (!this.threadStore || this.threadStore.itemId !== nextState.comment.id) {\r\n        this.commentLoaded(nextState.comment)\r\n      }\r\n    }\r\n  },\r\n\r\n  commentLoaded(comment) {\r\n    this.setTitle(comment)\r\n    if (!comment.deleted) {\r\n      this.threadStore = new CommentThreadStore(comment, this.handleCommentsChanged)\r\n      this.fetchAncestors(comment)\r\n    }\r\n  },\r\n\r\n  setTitle(comment) {\r\n    if (comment.deleted) {\r\n      return setTitle('Deleted comment')\r\n    }\r\n    var title = 'Comment by ' + comment.by\r\n    if (this.state.op.id) {\r\n      title += ' | ' + this.state.op.title\r\n    }\r\n    setTitle(title)\r\n  },\r\n\r\n  handleCommentsChanged(payload) {\r\n    // We're only interested in re-rendering to update collapsed display\r\n    if (payload.type === 'collapse') {\r\n      this.forceUpdate()\r\n    }\r\n  },\r\n\r\n  render() {\r\n    var comment = this.state.comment\r\n    if (!comment) {\r\n      return this.renderError(comment, {\r\n        id: this.props.params.id,\r\n        className: 'Comment Comment--level0 Comment--error'\r\n      })\r\n    }\r\n    // Render a placeholder while we're waiting for the comment to load\r\n    if (!comment.id) { return this.renderCommentLoading(comment) }\r\n    // Render a link to HN for deleted comments\r\n    if (comment.deleted) {\r\n      return this.renderCommentDeleted(comment, {\r\n        className: 'Comment Comment--level0 Comment--deleted'\r\n      })\r\n    }\r\n    // XXX Don't render anything if we're replacing the route after loading a non-comment\r\n    if (comment.type !== 'comment') { return null }\r\n\r\n    var className = cx('PermalinkedComment Comment Comment--level0', {'Comment--dead': comment.dead})\r\n    var threadStore = this.threadStore\r\n\r\n    return <div className={className}>\r\n      <div className=\"Comment__content\">\r\n        {this.renderCommentMeta(comment, {\r\n          parent: !!this.state.parent.id && !!this.state.op.id && comment.parent !== this.state.op.id,\r\n          op: !!this.state.op.id\r\n        })}\r\n        {(!comment.dead || SettingsStore.showDead) && this.renderCommentText(comment, {replyLink: true})}\r\n      </div>\r\n      {comment.kids && <div className=\"Comment__kids\">\r\n        {comment.kids.map(function(id, index) {\r\n          return <Comment key={id} id={id}\r\n            level={0}\r\n            loadingSpinner={index === 0}\r\n            threadStore={threadStore}\r\n          />\r\n        })}\r\n      </div>}\r\n    </div>\r\n  }\r\n})\r\n\r\nexport default withRouter(PermalinkedComment)\r\n","var React = require('react')\r\n\r\nvar SettingsStore = require('./stores/SettingsStore').default\r\n\r\nvar CommentMixin = require('./mixins/CommentMixin').default\r\n\r\nvar cx = require('./utils/buildClassName').default\r\n\r\n/**\r\n * Displays a standalone comment passed as a prop.\r\n */\r\nvar DisplayComment = React.createClass({\r\n  mixins: [CommentMixin],\r\n\r\n  propTypes: {\r\n    comment: React.PropTypes.object.isRequired\r\n  },\r\n\r\n  getInitialState() {\r\n    return {\r\n      op: {},\r\n      parent: {type: 'comment'}\r\n    }\r\n  },\r\n\r\n  componentWillMount() {\r\n    this.fetchAncestors(this.props.comment)\r\n  },\r\n\r\n  render() {\r\n    if (this.props.comment.deleted) { return null }\r\n    if (this.props.comment.dead && !SettingsStore.showDead) { return null }\r\n\r\n    var comment = this.props.comment\r\n    var className = cx('Comment Comment--level0', {\r\n      'Comment--dead': comment.dead\r\n    })\r\n\r\n    return <div className={className}>\r\n      <div className=\"Comment__content\">\r\n        {this.renderCommentMeta(comment, {\r\n          link: true,\r\n          parent: !!this.state.parent.id && !!this.state.op.id && comment.parent !== this.state.op.id,\r\n          op: !!this.state.op.id\r\n        })}\r\n        {this.renderCommentText(comment, {replyLink: false})}\r\n      </div>\r\n    </div>\r\n  }\r\n})\r\n\r\nexport default DisplayComment\r\n","var React = require('react')\r\n\r\nvar StoryCommentThreadStore = require('./stores/StoryCommentThreadStore').default\r\n\r\nvar ItemMixin = require('./mixins/ItemMixin').default\r\nvar ListItemMixin = require('./mixins/ListItemMixin').default\r\n\r\n/**\r\n * Display story title and metadata as a list item.\r\n * The story to display will be passed as a prop.\r\n */\r\nvar DisplayListItem = React.createClass({\r\n  mixins: [ItemMixin, ListItemMixin],\r\n\r\n  propTypes: {\r\n    item: React.PropTypes.object.isRequired\r\n  },\r\n\r\n  componentWillMount() {\r\n    this.threadState = StoryCommentThreadStore.loadState(this.props.item.id)\r\n  },\r\n\r\n  render() {\r\n    return this.renderListItem(this.props.item, this.threadState)\r\n  }\r\n})\r\n\r\nexport default DisplayListItem\r\n","var React = require('react')\r\n\r\nvar SettingsStore = require('./stores/SettingsStore').default\r\nvar UpdatesStore = require('./stores/UpdatesStore').default\r\n\r\nvar DisplayListItem = require('./DisplayListItem').default\r\nvar DisplayComment = require('./DisplayComment').default\r\nvar Paginator = require('./Paginator').default\r\nvar Spinner = require('./Spinner').default\r\n\r\nvar PageNumberMixin = require('./mixins/PageNumberMixin').default\r\n\r\nvar {ITEMS_PER_PAGE} = require('./utils/constants').default\r\nvar pageCalc = require('./utils/pageCalc').default\r\nvar setTitle = require('./utils/setTitle').default\r\n\r\nfunction filterDead(item) {\r\n  return !item.dead\r\n}\r\n\r\nfunction filterUpdates(updates) {\r\n  if (!SettingsStore.showDead) {\r\n    return {\r\n      comments: updates.comments.filter(filterDead),\r\n      stories: updates.stories.filter(filterDead)\r\n    }\r\n  }\r\n  return updates\r\n}\r\n\r\nvar Updates = React.createClass({\r\n  mixins: [PageNumberMixin],\r\n\r\n  getInitialState() {\r\n    return filterUpdates(UpdatesStore.getUpdates())\r\n  },\r\n\r\n  componentWillMount() {\r\n    this.setTitle(this.props.type)\r\n    UpdatesStore.start()\r\n    UpdatesStore.on('updates', this.handleUpdates)\r\n  },\r\n\r\n  componentWillUnmount() {\r\n    UpdatesStore.off('updates', this.handleUpdates)\r\n    UpdatesStore.stop()\r\n  },\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.type !== nextProps.type) {\r\n      this.setTitle(nextProps.type)\r\n    }\r\n  },\r\n\r\n  setTitle(type) {\r\n    setTitle('New ' + (type === 'comments' ? 'Comments' : 'Links'))\r\n  },\r\n\r\n  handleUpdates(updates) {\r\n    if (!this.isMounted()) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.warn('Skipping update of ' + this.props.type + ' as the Updates component is not mounted')\r\n      }\r\n      return\r\n    }\r\n    this.setState(filterUpdates(updates))\r\n  },\r\n\r\n  render() {\r\n    var items = (this.props.type === 'comments' ? this.state.comments : this.state.stories)\r\n    if (items.length === 0) {\r\n      return <div className=\"Updates Updates--loading\"><Spinner size=\"20\"/></div>\r\n    }\r\n\r\n    var page = pageCalc(this.getPageNumber(), ITEMS_PER_PAGE, items.length)\r\n\r\n    if (this.props.type === 'comments') {\r\n      return <div className=\"Updates Comments\">\r\n        {items.slice(page.startIndex, page.endIndex).map(function(comment) {\r\n          return <DisplayComment key={comment.id} id={comment.id} comment={comment}/>\r\n        })}\r\n        <Paginator route=\"newcomments\" page={page.pageNum} hasNext={page.hasNext}/>\r\n      </div>\r\n    }\r\n    else {\r\n      return <div className=\"Updates Items\">\r\n        <ol className=\"Items__list\" start={page.startIndex + 1}>\r\n          {items.slice(page.startIndex, page.endIndex).map(function(item) {\r\n            return <DisplayListItem key={item.id} item={item}/>\r\n          })}\r\n        </ol>\r\n        <Paginator route=\"newest\" page={page.pageNum} hasNext={page.hasNext}/>\r\n      </div>\r\n    }\r\n  }\r\n})\r\n\r\nexport default Updates\r\n","var React = require('react')\r\nvar ReactFireMixin = require('reactfire')\r\n\r\nvar StoryCommentThreadStore = require('./stores/StoryCommentThreadStore').default\r\nvar HNService = require('./services/HNService').default\r\nvar SettingsStore = require('./stores/SettingsStore').default\r\nvar StoryStore = require('./stores/StoryStore').default\r\n\r\nvar ItemMixin = require('./mixins/ItemMixin').default\r\nvar ListItemMixin = require('./mixins/ListItemMixin').default\r\nvar Spinner = require('./Spinner').default\r\n\r\n/**\r\n * Display story title and metadata as as a list item.\r\n * Cached story data may be given as a prop, but this component is also\r\n * responsible for listening to updates to the story and providing the latest\r\n * version for StoryStore's cache.\r\n */\r\nvar StoryListItem = React.createClass({\r\n  mixins: [ItemMixin, ListItemMixin, ReactFireMixin],\r\n\r\n  propTypes: {\r\n    // The StoryStore handling caching and updates to the stories being displayed\r\n    store: React.PropTypes.instanceOf(StoryStore).isRequired,\r\n\r\n    // The story's id in Hacker News\r\n    id: React.PropTypes.number,\r\n    // A version of the story from the cache, for initial display\r\n    cachedItem: React.PropTypes.object,\r\n    // The current index of the story in the list being displayed\r\n    index: React.PropTypes.number\r\n  },\r\n\r\n  getDefaultProps() {\r\n    return {\r\n      id: null,\r\n      cachedItem: null,\r\n      index: null\r\n    }\r\n  },\r\n\r\n  getInitialState() {\r\n    return {\r\n      item: this.props.cachedItem || {}\r\n    }\r\n  },\r\n\r\n  componentWillMount() {\r\n    if (this.props.id != null) {\r\n      this.initLiveItem(this.props)\r\n    }\r\n    else if (this.props.cachedItem != null) {\r\n      // Display the comment state of the cached item we were given while we're\r\n      // waiting for the live item to load.\r\n      this.threadState = StoryCommentThreadStore.loadState(this.state.item.id)\r\n    }\r\n  },\r\n\r\n  componentWillUnmount() {\r\n    if (this.props.id != null) {\r\n      this.props.store.removeListener(this.props.id, this.updateThreadState)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Catch the transition from not having an id prop to having one.\r\n   * Scenario: we were waiting for the initial list of story ids to load.\r\n   */\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.id == null && nextProps.id != null) {\r\n      this.initLiveItem(nextProps)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * If the live item has been loaded or updated, update the StoryStore cache\r\n   * with its current index and latest data.\r\n   */\r\n  componentWillUpdate(nextProps, nextState) {\r\n    if (this.state.item !== nextState.item) {\r\n      if (nextState.item != null) {\r\n        this.props.store.itemUpdated(nextState.item, this.props.index)\r\n      }\r\n      else {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          console.warn(`Item ${this.props.id} went from ${JSON.stringify(this.state.item)} to ${nextProps.item}`)\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Initialise listening to updates for the item with the given id and\r\n   * initialise its comment thread state.\r\n   */\r\n  initLiveItem(props) {\r\n    // If we were given a cached item to display initially, it will be replaced\r\n    this.bindAsObject(HNService.itemRef(props.id), 'item')\r\n\r\n    this.threadState = StoryCommentThreadStore.loadState(props.id)\r\n    this.props.store.addListener(props.id, this.updateThreadState)\r\n  },\r\n\r\n  /**\r\n   * Update thread state in response to a storage event indicating it has been\r\n   * modified.\r\n   */\r\n  updateThreadState() {\r\n    this.threadState = StoryCommentThreadStore.loadState(this.props.id)\r\n    this.forceUpdate()\r\n  },\r\n\r\n  render() {\r\n    // Display the loading spinner if we have nothing to show initially\r\n    if (!this.state.item || !this.state.item.id) {\r\n      return <li className=\"ListItem ListItem--loading\" style={{marginBottom: SettingsStore.listSpacing}}>\r\n        <Spinner/>\r\n      </li>\r\n    }\r\n\r\n    return this.renderListItem(this.state.item, this.threadState)\r\n  }\r\n})\r\n\r\nexport default StoryListItem\r\n","var React = require('react')\r\n\r\nvar StoryStore = require('./stores/StoryStore').default\r\n\r\nvar PageNumberMixin = require('./mixins/PageNumberMixin').default\r\nvar Paginator = require('./Paginator').default\r\nvar Spinner = require('./Spinner').default\r\nvar StoryListItem = require('./StoryListItem').default\r\nvar SettingsStore = require('./stores/SettingsStore').default\r\n\r\nvar {ITEMS_PER_PAGE} = require('./utils/constants').default\r\nvar pageCalc = require('./utils/pageCalc').default\r\nvar setTitle = require('./utils/setTitle').default\r\n\r\nvar Stories = React.createClass({\r\n  mixins: [PageNumberMixin],\r\n\r\n  propTypes: {\r\n    // The number of stories which may be paginated through\r\n    limit: React.PropTypes.number.isRequired,\r\n    // The route name being used\r\n    route: React.PropTypes.string.isRequired,\r\n    // The type of stories to be displayed\r\n    type: React.PropTypes.string.isRequired,\r\n\r\n    // Page title associated with the stories being displayed\r\n    title: React.PropTypes.string\r\n  },\r\n\r\n  getInitialState() {\r\n    return {\r\n      ids: null,\r\n      limit: this.props.limit,\r\n      stories: []\r\n    }\r\n  },\r\n\r\n  componentDidMount() {\r\n    setTitle(this.props.title)\r\n    this.store = new StoryStore(this.props.type)\r\n    this.store.addListener('update', this.handleUpdate)\r\n    this.store.start()\r\n    this.setState(this.store.getState())\r\n  },\r\n\r\n  componentWillUnmount() {\r\n    this.store.removeListener('update', this.handleUpdate)\r\n    this.store.stop()\r\n    this.store = null\r\n  },\r\n\r\n  handleUpdate(update) {\r\n    if (!this.isMounted()) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.warn(\r\n          `Skipping update as the ${this.props.type} Stories component is no longer mounted.`\r\n        )\r\n      }\r\n      return\r\n    }\r\n    update.limit = update.ids.length\r\n    this.setState(update)\r\n  },\r\n\r\n  render() {\r\n    var page = pageCalc(this.getPageNumber(), ITEMS_PER_PAGE, this.state.limit)\r\n\r\n    // Special case for the Read Stories page, as its ids are read from\r\n    // localStorage and there might not be any yet.\r\n    if (this.props.type === 'read') {\r\n      if (this.state.ids == null) {\r\n        return <div className=\"Items\"></div>\r\n      }\r\n      if (this.state.ids.length === 0) {\r\n        return <div className=\"Items\">\r\n          <p>There are no previously read stories to display.</p>\r\n        </div>\r\n      }\r\n    }\r\n\r\n    // Display a list of placeholder items while we're waiting for the initial\r\n    // list of story ids to load from Firebase.\r\n    if (this.state.ids == null) {\r\n      var dummyItems = []\r\n      for (var i = page.startIndex; i < page.endIndex; i++) {\r\n        dummyItems.push(\r\n          <li key={i} className=\"ListItem ListItem--loading\" style={{marginBottom: SettingsStore.listSpacing}}>\r\n            <Spinner/>\r\n          </li>\r\n        )\r\n      }\r\n      return <div className=\"Items Items--loading\">\r\n        <ol className=\"Items__list\" start={page.startIndex + 1}>{dummyItems}</ol>\r\n        <Paginator route={this.props.route} page={page.pageNum} hasNext={page.hasNext}/>\r\n      </div>\r\n    }\r\n\r\n    return <div className=\"Items\">\r\n      <ol className=\"Items__list\" start={page.startIndex + 1}>\r\n        {this.renderItems(page.startIndex, page.endIndex)}\r\n      </ol>\r\n      <Paginator route={this.props.route} page={page.pageNum} hasNext={page.hasNext}/>\r\n    </div>\r\n  },\r\n\r\n  renderItems(startIndex, endIndex) {\r\n    var rendered = []\r\n    for (var i = startIndex; i < endIndex; i++) {\r\n      var item = this.state.stories[i]\r\n      var id = this.state.ids[i]\r\n      if (id) {\r\n        rendered.push(<StoryListItem key={id} id={id} index={i} cachedItem={item} store={this.store}/>)\r\n      }\r\n      else {\r\n        rendered.push(<StoryListItem key={i} cachedItem={item} store={this.store}/>)\r\n      }\r\n    }\r\n    return rendered\r\n  }\r\n})\r\n\r\nexport default Stories\r\n","var React = require('react')\r\n\r\nvar SettingsStore = require('./stores/SettingsStore').default\r\n\r\nvar Settings = React.createClass({\r\n  componentDidMount() {\r\n    this.refs.container.focus()\r\n  },\r\n\r\n  onChange(e) {\r\n    var el = e.target\r\n    if (el.type === 'checkbox') {\r\n      SettingsStore[el.name] = el.checked\r\n    }\r\n    else if (el.type === 'number' && el.value) {\r\n      SettingsStore[el.name] = el.value\r\n    }\r\n    this.forceUpdate()\r\n    SettingsStore.save()\r\n  },\r\n\r\n  onClick(e) {\r\n    e.stopPropagation()\r\n  },\r\n\r\n  render() {\r\n    return <div ref=\"container\" className=\"Settings\" tabIndex=\"-1\" onClick={this.onClick}>\r\n      <form onChange={this.onChange}>\r\n        <div className=\"Settings__setting Settings__setting--checkbox\">\r\n          <label htmlFor=\"autoCollapse\">\r\n            <input type=\"checkbox\" name=\"autoCollapse\" id=\"autoCollapse\" checked={SettingsStore.autoCollapse}/> auto collapse\r\n          </label>\r\n          <p>Automatically collapse comment threads without new comments on page load.</p>\r\n        </div>\r\n        <div className=\"Settings__setting Settings__setting--checkbox\">\r\n          <label htmlFor=\"replyLinks\">\r\n            <input type=\"checkbox\" name=\"replyLinks\" id=\"replyLinks\" checked={SettingsStore.replyLinks}/> show reply links\r\n          </label>\r\n          <p>Show \"reply\" links to Hacker News</p>\r\n        </div>\r\n        <div className=\"Settings__setting Settings__setting--checkbox\">\r\n          <label htmlFor=\"showDead\">\r\n            <input type=\"checkbox\" name=\"showDead\" id=\"showDead\" checked={SettingsStore.showDead}/> show dead\r\n          </label>\r\n          <p>Show items flagged as dead.</p>\r\n        </div>\r\n        <div className=\"Settings__setting Settings__setting--checkbox\">\r\n          <label htmlFor=\"showDeleted\">\r\n            <input type=\"checkbox\" name=\"showDeleted\" id=\"showDeleted\" checked={SettingsStore.showDeleted}/> show deleted\r\n          </label>\r\n          <p>Show comments flagged as deleted in threads.</p>\r\n        </div>\r\n        <div className=\"Settings__setting\">\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td><label htmlFor=\"titleFontSize\">title font size:</label></td>\r\n                <td><input type=\"number\" min=\"14\" step=\"1\" name=\"titleFontSize\" id=\"titleFontSize\" value={SettingsStore.titleFontSize}/></td>\r\n              </tr>\r\n              <tr>\r\n                <td><label htmlFor=\"listSpacing\">list spacing:</label></td>\r\n                <td><input type=\"number\" min=\"0\" name=\"listSpacing\" id=\"listSpacing\" value={SettingsStore.listSpacing}/></td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  }\r\n})\r\n\r\nexport default Settings\r\n","/* global __VERSION__ */\r\nvar React = require('react')\r\nvar Link = require('react-router/lib/Link')\r\n\r\nvar Settings = require('./Settings').default\r\n\r\nvar StoryStore = require('./stores/StoryStore').default\r\nvar UpdatesStore = require('./stores/UpdatesStore').default\r\nvar SettingsStore = require('./stores/SettingsStore').default\r\n\r\nvar App = React.createClass({\r\n  getInitialState() {\r\n    return {\r\n      showSettings: false\r\n    }\r\n  },\r\n\r\n  componentWillMount() {\r\n    SettingsStore.load()\r\n    StoryStore.loadSession()\r\n    UpdatesStore.loadSession()\r\n    window.addEventListener('beforeunload', this.handleBeforeUnload)\r\n  },\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('beforeunload', this.handleBeforeUnload)\r\n  },\r\n\r\n  /**\r\n   * Give stores a chance to persist data to sessionStorage in case this is a\r\n   * refresh or an external link in the same tab.\r\n   */\r\n  handleBeforeUnload() {\r\n    StoryStore.saveSession()\r\n    UpdatesStore.saveSession()\r\n  },\r\n\r\n  toggleSettings(e) {\r\n    e.preventDefault()\r\n    this.setState({showSettings: !this.state.showSettings})\r\n  },\r\n\r\n  render() {\r\n    return <div className=\"App\" onClick={this.state.showSettings && this.toggleSettings}>\r\n      <div className=\"App__wrap\">\r\n        <div className=\"App__header\">\r\n          <Link to=\"/news\" className=\"App__homelinkicon\"><img src=\"img/logo.png\" width=\"16\" height=\"16\" alt=\"\" /></Link>{' '}\r\n          <Link to=\"/news\" activeClassName=\"active\" className=\"App__homelink\">React HN</Link>{' '}\r\n          <Link to=\"/best\" activeClassName=\"active\">best</Link>{' | '}\r\n          <Link to=\"/newest\" activeClassName=\"active\">new</Link>{' | '}\r\n          <Link to=\"/newcomments\" activeClassName=\"active\">comments</Link> {' | '}\r\n          <Link to=\"/show\" activeClassName=\"active\">show</Link>{' | '}\r\n          <Link to=\"/ask\" activeClassName=\"active\">ask</Link>{' | '}\r\n          <Link to=\"/jobs\" activeClassName=\"active\">jobs</Link>{' | '}\r\n          <Link to=\"/read\" activeClassName=\"active\">read</Link>\r\n          <a className=\"App__settings\" tabIndex=\"0\" onClick={this.toggleSettings} onKeyPress={this.toggleSettings}>\r\n            {this.state.showSettings ? 'hide settings' : 'settings'}\r\n          </a>\r\n          {this.state.showSettings && <Settings key=\"settings\"/>}\r\n        </div>\r\n        <div className=\"App__content\">\r\n          {this.props.children}\r\n        </div>\r\n        <div className=\"App__footer\">\r\n          {`react-hn v${__VERSION__} | `}\r\n          <a href=\"https://github.com/insin/react-hn\">insin/react-hn</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n})\r\n\r\nexport default App\r\n","var React = require('react')\r\nvar ReactFireMixin = require('reactfire')\r\n\r\nvar HNService = require('./services/HNService').default\r\n\r\nvar Spinner = require('./Spinner').default\r\n\r\nvar pluralise = require('./utils/pluralise').default\r\n\r\nvar PollOption = React.createClass({\r\n  mixins: [ReactFireMixin],\r\n\r\n  getInitialState() {\r\n    return {pollopt: {}}\r\n  },\r\n\r\n  componentWillMount() {\r\n    this.bindAsObject(HNService.itemRef(this.props.id), 'pollopt')\r\n  },\r\n\r\n  render() {\r\n    var pollopt = this.state.pollopt\r\n    if (!pollopt.id) { return <div className=\"PollOption PollOption--loading\"><Spinner size=\"20\"/></div> }\r\n    return <div className=\"PollOption\">\r\n      <div className=\"PollOption__text\">\r\n        {pollopt.text}\r\n      </div>\r\n      <div className=\"PollOption__score\">\r\n        {pollopt.score} point{pluralise(pollopt.score)}\r\n      </div>\r\n    </div>\r\n  }\r\n})\r\n\r\nexport default PollOption\r\n","/**\r\n * Based on the implementation of _.debounce() from Underscore.js 1.7.0\r\n * http://underscorejs.org\r\n * (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\r\n * Distributed under the MIT license.\r\n *\r\n * Returns a function, that, as long as it continues to be invoked, will not\r\n * be triggered. The function will be called after it stops being called for\r\n * N milliseconds. If `immediate` is passed, trigger the function on the\r\n * leading edge, instead of the trailing.\r\n *\r\n * The returned function has a .cancel() function which can be used to prevent\r\n * the debounced functiom being called.\r\n */\r\nfunction cancellableDebounce(func, wait, immediate) {\r\n  var timeout, args, context, timestamp, result\r\n\r\n  var later = function() {\r\n    var last = Date.now() - timestamp\r\n    if (last < wait && last > 0) {\r\n      timeout = setTimeout(later, wait - last)\r\n    }\r\n    else {\r\n      timeout = null\r\n      if (!immediate) {\r\n        result = func.apply(context, args)\r\n        if (!timeout) {\r\n          context = args = null\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  var debounced = function() {\r\n    context = this\r\n    args = arguments\r\n    timestamp = Date.now()\r\n    var callNow = immediate && !timeout\r\n    if (!timeout) {\r\n      timeout = setTimeout(later, wait)\r\n    }\r\n    if (callNow) {\r\n      result = func.apply(context, args)\r\n      context = args = null\r\n    }\r\n    return result\r\n  }\r\n\r\n  debounced.cancel = function() {\r\n    if (timeout) {\r\n      clearTimeout(timeout)\r\n    }\r\n  }\r\n\r\n  return debounced\r\n}\r\n\r\nexport default cancellableDebounce\r\n","var React = require('react')\r\nvar ReactFireMixin = require('reactfire')\r\nvar TimeAgo = require('react-timeago').default\r\n\r\nvar HNService = require('./services/HNService').default\r\nvar StoryCommentThreadStore = require('./stores/StoryCommentThreadStore').default\r\nvar ItemStore = require('./stores/ItemStore').default\r\n\r\nvar Comment = require('./Comment').default\r\nvar PollOption = require('./PollOption').default\r\nvar Spinner = require('./Spinner').default\r\nvar ItemMixin = require('./mixins/ItemMixin').default\r\n\r\nvar cx = require('./utils/buildClassName').default\r\nvar setTitle = require('./utils/setTitle').default\r\nvar pluralise = require('./utils/pluralise').default\r\n\r\nfunction timeUnitsAgo(value, unit, suffix) {\r\n  if (value === 1) {\r\n    return unit\r\n  }\r\n  return `${value} ${unit}s`\r\n}\r\n\r\nvar Item = React.createClass({\r\n  mixins: [ItemMixin, ReactFireMixin],\r\n\r\n  getInitialState() {\r\n    return {\r\n      item: ItemStore.getCachedStory(Number(this.props.params.id)) || {}\r\n    }\r\n  },\r\n\r\n  componentWillMount() {\r\n    this.bindAsObject(HNService.itemRef(this.props.params.id), 'item')\r\n\r\n    if (this.state.item.id) {\r\n      this.threadStore = new StoryCommentThreadStore(this.state.item, this.handleCommentsChanged, {cached: true})\r\n      setTitle(this.state.item.title)\r\n    }\r\n    window.addEventListener('beforeunload', this.handleBeforeUnload)\r\n  },\r\n\r\n  componentWillUnmount() {\r\n    if (this.threadStore) {\r\n      this.threadStore.dispose()\r\n    }\r\n    window.removeEventListener('beforeunload', this.handleBeforeUnload)\r\n  },\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.props.params.id !== nextProps.params.id) {\r\n      // Tear it down...\r\n      this.threadStore.dispose()\r\n      this.threadStore = null\r\n      this.unbind('item')\r\n      // ...and set it up again\r\n      var item = ItemStore.getCachedStory(Number(nextProps.params.id))\r\n      if (item) {\r\n        this.threadStore = new StoryCommentThreadStore(item, this.handleCommentsChanged, {cached: true})\r\n        setTitle(item.title)\r\n      }\r\n\r\n      this.bindAsObject(HNService.itemRef(nextProps.params.id), 'item')\r\n      this.setState({item: item || {}})\r\n    }\r\n  },\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    // Update the title when the item has loaded.\r\n    if (!this.state.item.id && nextState.item.id) {\r\n      setTitle(nextState.item.title)\r\n    }\r\n  },\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // If the state item id changed, an initial or new item must have loaded\r\n    if (prevState.item.id !== this.state.item.id) {\r\n      if (!this.threadStore || this.threadStore.itemId !== this.state.item.id) {\r\n        this.threadStore = new StoryCommentThreadStore(this.state.item, this.handleCommentsChanged, {cached: false})\r\n        setTitle(this.state.item.title)\r\n        this.forceUpdate()\r\n      }\r\n    }\r\n    else if (prevState.item !== this.state.item) {\r\n      // If the item has been updated from Firebase and the initial set\r\n      // of comments is still loading, the number of expected comments might\r\n      // need to be adjusted.\r\n      // This triggers a check for thread load completion, completing it\r\n      // immediately if a cached item had 0 kids and the latest version from\r\n      // Firebase also has 0 kids.\r\n      if (this.threadStore.loading) {\r\n        var kids = (this.state.item.kids ? this.state.item.kids.length : 0)\r\n        var prevKids = (prevState.item.kids ? prevState.item.kids.length : 0)\r\n        var kidDiff = kids - prevKids\r\n        if (kidDiff !== 0) {\r\n          this.threadStore.adjustExpectedComments(kidDiff)\r\n        }\r\n      }\r\n      this.threadStore.itemUpdated(this.state.item)\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Ensure the last visit time and comment details get stored for this item if\r\n   * the user refreshes or otherwise navigates off the page.\r\n   */\r\n  handleBeforeUnload() {\r\n    if (this.threadStore) {\r\n      this.threadStore.dispose()\r\n    }\r\n  },\r\n\r\n  handleCommentsChanged(payload) {\r\n    this.forceUpdate()\r\n  },\r\n\r\n  autoCollapse(e) {\r\n    e.preventDefault()\r\n    this.threadStore.collapseThreadsWithoutNewComments()\r\n  },\r\n\r\n  markAsRead(e) {\r\n    e.preventDefault()\r\n    this.threadStore.markAsRead()\r\n    this.forceUpdate()\r\n  },\r\n\r\n  getButtonLabel() {\r\n    var showCommentsAfter = this.state.showNewCommentsAfter || this.threadStore.commentCount - 1\r\n    var howMany = this.threadStore.commentCount - showCommentsAfter\r\n    var timeComment = this.threadStore.getCommentByTimeIndex(showCommentsAfter + 1)\r\n    var text = `highlight ${howMany} comment${pluralise(howMany)} from `\r\n    return <span>\r\n      {text}\r\n      {timeComment && <TimeAgo date={new Date(timeComment.time * 1000)}/>}\r\n    </span>\r\n  },\r\n\r\n  highlightRecentComments() {\r\n    var showCommentsAfter = this.state.showNewCommentsAfter || this.threadStore.commentCount - 1\r\n    this.threadStore.highlightNewCommentsSince(showCommentsAfter)\r\n  },\r\n\r\n  render() {\r\n    var state = this.state\r\n    var item = state.item\r\n    var threadStore = this.threadStore\r\n    if (!item.id || !threadStore) { return <div className=\"Item Item--loading\"><Spinner size=\"20\"/></div> }\r\n    return <div className={cx('Item', {'Item--dead': item.dead})}>\r\n      <div className=\"Item__content\">\r\n        {this.renderItemTitle(item)}\r\n        {this.renderItemMeta(item, (threadStore.lastVisit !== null && threadStore.newCommentCount > 0 && <span>{' '}\r\n          (<em>{threadStore.newCommentCount} new</em> in the last <TimeAgo date={threadStore.lastVisit} formatter={timeUnitsAgo}/>{') | '}\r\n          <span className=\"control\" tabIndex=\"0\" onClick={this.autoCollapse} onKeyPress={this.autoCollapse} title=\"Collapse threads without new comments\">\r\n            auto collapse\r\n          </span>{' | '}\r\n          <span className=\"control\" tabIndex=\"0\" onClick={this.markAsRead} onKeyPress={this.markAsRead}>\r\n            mark as read\r\n          </span>\r\n        </span>))}\r\n        <div style={{\r\n          marginTop: '1em', opacity:\r\n          !threadStore.loading && threadStore.commentCount > 1 ? 1.0 : 0.0,\r\n          transition: 'opacity .33s ease-out',\r\n        }}>\r\n          <input\r\n            max={threadStore.commentCount - 1}\r\n            min={1}\r\n            style={{margin: 0, verticalAlign: 'middle'}}\r\n            type=\"range\"\r\n            value={state.showNewCommentsAfter || threadStore.commentCount - 1}\r\n            onChange={(e) => {\r\n              var showNewCommentsAfter = Number(e.target.value)\r\n              this.setState({showNewCommentsAfter})\r\n            }}\r\n          />\r\n          <button type=\"button\" onClick={this.highlightRecentComments}>\r\n            {this.getButtonLabel()}\r\n          </button>\r\n        </div>\r\n        {item.text && <div className=\"Item__text\">\r\n          <div dangerouslySetInnerHTML={{__html: item.text}}/>\r\n        </div>}\r\n        {item.type === 'poll' && <div className=\"Item__poll\">\r\n          {item.parts.map(function(id) {\r\n            return <PollOption key={id} id={id}/>\r\n          })}\r\n        </div>}\r\n      </div>\r\n      {item.kids && <div className=\"Item__kids\">\r\n        {item.kids.map(function(id, index) {\r\n          return <Comment key={id} id={id} level={0}\r\n            loadingSpinner={index === 0}\r\n            threadStore={threadStore}\r\n          />\r\n        })}\r\n      </div>}\r\n    </div>\r\n  }\r\n})\r\n\r\nexport default Item\r\n","var IndexRoute = require('react-router/lib/IndexRoute')\r\nvar React = require('react')\r\nvar Route = require('react-router/lib/Route')\r\nvar Item = require('./Item').default\r\n// Polyfill require.ensure\r\nif (typeof require.ensure !== 'function') require.ensure = function(d, c) { c(require) }\r\n\r\nvar App = require('./App').default\r\nvar Stories = require('./Stories').default\r\nvar Updates = require('./Updates').default\r\nvar PermalinkedComment = require('./PermalinkedComment').default\r\nvar UserProfile = require('./UserProfile').default\r\nvar NotFound = require('./NotFound').default\r\n\r\nfunction stories(route, type, limit, title) {\r\n  return React.createClass({\r\n    render() {\r\n      return <Stories {...this.props} key={route} route={route} type={type} limit={limit} title={title}/>\r\n    }\r\n  })\r\n}\r\n\r\nfunction updates(type) {\r\n  return React.createClass({\r\n    render() {\r\n      return <Updates {...this.props} key={type} type={type}/>\r\n    }\r\n  })\r\n}\r\n\r\nvar Ask = stories('ask', 'askstories', 200, 'Ask')\r\nvar Comments = updates('comments')\r\nvar Jobs = stories('jobs', 'jobstories', 200, 'Jobs')\r\nvar New = stories('newest', 'newstories', 500, 'New Links')\r\nvar Show = stories('show', 'showstories', 200, 'Show')\r\nvar Best = stories('news', 'beststories', 500)\r\nvar Top = stories('news', 'topstories', 500)\r\nvar Read = stories('read', 'read', 0, 'Read Stories')\r\n\r\nexport default <Route path=\"/\" component={App}>\r\n  <IndexRoute component={Top}/>\r\n  <Route path=\"news\" component={Top}/>\r\n  <Route path=\"best\" component={Best}/>\r\n  <Route path=\"newest\" component={New}/>\r\n  <Route path=\"show\" component={Show}/>\r\n  <Route path=\"ask\" component={Ask}/>\r\n  <Route path=\"jobs\" component={Jobs}/>\r\n  <Route path=\"read\" component={Read}/>\r\n  <Route path=\"item/:id\" component={Item}/>\r\n  <Route path=\"job/:id\" component={Item}/>\r\n  <Route path=\"poll/:id\" component={Item}/>\r\n  <Route path=\"story/:id\" component={Item}/>\r\n  <Route path=\"comment/:id\" component={PermalinkedComment}/>\r\n  <Route path=\"newcomments\" component={Comments}/>\r\n  <Route path=\"user/:id\" component={UserProfile}/>\r\n  <Route path=\"*\" component={NotFound}/>\r\n</Route>\r\n","var React = require('react')\r\n\r\n// TODO Implement GIF-based fallback for IE9 and another non-animating browsers\r\n//      See https://github.com/tobiasahlin/SpinKit for how-to\r\nvar Spinner = React.createClass({\r\n  getDefaultProps() {\r\n    return {size: 6, spacing: 2}\r\n  },\r\n\r\n  render() {\r\n    var bounceSize = this.props.size + 'px'\r\n    var bounceStyle = {height: bounceSize, width: bounceSize, marginRight: this.props.spacing + 'px'}\r\n    return <div className=\"Spinner\" style={{width: ((Number(this.props.size) + Number(this.props.spacing)) * 3) + 'px'}}>\r\n      <div className=\"bounce1\" style={bounceStyle}/>\r\n      <div className=\"bounce2\" style={bounceStyle}/>\r\n      <div className=\"bounce3\" style={bounceStyle}/>\r\n    </div>\r\n  }\r\n})\r\n\r\nexport default Spinner\r\n","import {hashHistory} from 'react-router'\r\n\r\nrequire('./style.css')\r\n\r\nrequire('setimmediate')\r\n\r\nvar React = require('react')\r\nvar {render} = require('react-dom')\r\nvar Router = require('react-router/lib/Router')\r\nvar useScroll = require('react-router-scroll/lib/useScroll')\r\nvar applyRouterMiddleware = require('react-router/lib/applyRouterMiddleware')\r\n\r\nvar routes = require('./routes').default\r\n\r\nrender(\r\n  <Router\r\n    history={hashHistory}\r\n    render={applyRouterMiddleware(useScroll())}\r\n    routes={routes}\r\n  />,\r\n  document.getElementById('app')\r\n)\r\n","var {SITE_TITLE} = require('./constants').default\r\n\r\nfunction setTitle(title) {\r\n  if (typeof document === 'undefined') return\r\n  document.title = (title ? title + ' | ' + SITE_TITLE : SITE_TITLE)\r\n}\r\n\r\nexport default setTitle\r\n","/**\r\n * Creates a className string including some class names conditionally.\r\n * @param {string=} staticClassName class name(s) which should always be\r\n *   included.\r\n * @param {Object.<string, *>} conditionalClassNames an object mapping class\r\n *   names to a value which indicates if the class name should be included -\r\n *   class names will be included if their corresponding value is truthy.\r\n * @return {string}\r\n */\r\nfunction buildClassName(staticClassName, conditionalClassNames) {\r\n  var classNames = []\r\n  if (typeof conditionalClassNames == 'undefined') {\r\n    conditionalClassNames = staticClassName\r\n  }\r\n  else {\r\n    classNames.push(staticClassName)\r\n  }\r\n  var classNameKeys = Object.keys(conditionalClassNames)\r\n  for (var i = 0, l = classNameKeys.length; i < l; i++) {\r\n    if (conditionalClassNames[classNameKeys[i]]) {\r\n      classNames.push(classNameKeys[i])\r\n    }\r\n  }\r\n  return classNames.join(' ')\r\n}\r\n\r\nexport default buildClassName\r\n","function pluralise(howMany, suffixes) {\r\n  return (suffixes || ',s').split(',')[(howMany === 1 ? 0 : 1)]\r\n}\r\n\r\nexport default pluralise\r\n","function extend(dest, src1, src2) {\r\n  var props = Object.keys(src1)\r\n  for (var i = 0, l = props.length; i < l; i++) {\r\n    dest[props[i]] = src1[props[i]]\r\n  }\r\n  if (src2) {\r\n    props = Object.keys(src2)\r\n    for (i = 0, l = props.length; i < l; i++) {\r\n      dest[props[i]] = src2[props[i]]\r\n    }\r\n  }\r\n  return dest\r\n}\r\n\r\nexport default extend\r\n","export default {\r\n  ITEMS_PER_PAGE: 30,\r\n  SITE_TITLE: 'React HN',\r\n  UPDATES_CACHE_SIZE: 500\r\n}\r\n","var EventEmitter = require('events').EventEmitter\r\n\r\nvar HNService = require('../services/HNService').default\r\n\r\nvar {UPDATES_CACHE_SIZE} = require('../utils/constants').default\r\nvar extend = require('../utils/extend').default\r\n\r\n/**\r\n * Firebase reference used to stream updates.\r\n */\r\nvar updatesRef = null\r\n\r\n/**\r\n * Contains item id -> item cache objects. Persisted to sessionStorage.\r\n * @prop .comments {Object.<id,item>} comments cache.\r\n * @prop .stories {Object.<id,item>} story cache.\r\n */\r\nvar updatesCache = null\r\n\r\n/**\r\n * Lists of items in reverse chronological order for display.\r\n * @prop .comments {Array.<item>} comment updates.\r\n * @prop .stories {Array.<item>} story updates.\r\n */\r\nvar updates = {}\r\n\r\nfunction sortByTimeDesc(a, b) {\r\n  return b.time - a.time\r\n}\r\n\r\nfunction cacheObjToSortedArray(obj) {\r\n  var arr = Object.keys(obj).map(function(id) { return obj[id] })\r\n  arr.sort(sortByTimeDesc)\r\n  return arr\r\n}\r\n\r\n/**\r\n * Populate lists of updates for display from the cache.\r\n */\r\nfunction populateUpdates() {\r\n  updates.comments = processCacheObj(updatesCache.comments)\r\n  updates.stories = processCacheObj(updatesCache.stories)\r\n}\r\n\r\n/**\r\n * Create an array of items from a cache object, sorted in reverse chronological\r\n * order. Evict the oldest items from the cache if it's grown above\r\n * UPDATES_CACHE_SIZE.\r\n */\r\nfunction processCacheObj(cacheObj) {\r\n  var arr = cacheObjToSortedArray(cacheObj)\r\n  arr.splice(UPDATES_CACHE_SIZE, Math.max(0, arr.length - UPDATES_CACHE_SIZE))\r\n     .forEach(function(item) {\r\n       delete cacheObj[item.id]\r\n     })\r\n  return arr\r\n}\r\n\r\n/**\r\n * Lookup to filter out any items which appear in the updates feed which can't\r\n * be displayed by the Updates component.\r\n */\r\nvar updateItemTypes = {\r\n  comment: true,\r\n  job: true,\r\n  poll: true,\r\n  story: true\r\n}\r\n\r\n/**\r\n * Process incoming items from the update stream.\r\n */\r\nfunction handleUpdateItems(items) {\r\n  for (var i = 0, l = items.length; i < l; i++) {\r\n    var item = items[i]\r\n    // Silently ignore deleted items (because irony)\r\n    if (item.deleted) { continue }\r\n\r\n    if (typeof updateItemTypes[item.type] == 'undefined') {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.warn(\r\n          \"An item which can't be displayed by the Updates component was \" +\r\n          'received in the updates stream: ' + JSON.stringify(item)\r\n        )\r\n      }\r\n      continue\r\n    }\r\n\r\n    if (item.type === 'comment') {\r\n      updatesCache.comments[item.id] = item\r\n    }\r\n    else {\r\n      updatesCache.stories[item.id] = item\r\n    }\r\n  }\r\n  populateUpdates()\r\n  UpdatesStore.emit('updates', updates)\r\n}\r\n\r\nvar UpdatesStore = extend(new EventEmitter(), {\r\n  loadSession() {\r\n    var json = window.sessionStorage.updates\r\n    updatesCache = (json ? JSON.parse(json) : {comments: {}, stories: {}})\r\n    populateUpdates()\r\n  },\r\n\r\n  saveSession() {\r\n    window.sessionStorage.updates = JSON.stringify(updatesCache)\r\n  },\r\n\r\n  start() {\r\n    if (updatesRef === null) {\r\n      updatesRef = HNService.updatesRef()\r\n      updatesRef.on('value', function(snapshot) {\r\n        HNService.fetchItems(snapshot.val(), handleUpdateItems)\r\n      })\r\n    }\r\n  },\r\n\r\n  stop() {\r\n    updatesRef.off()\r\n    updatesRef = null\r\n  },\r\n\r\n  getUpdates() {\r\n    return updates\r\n  },\r\n\r\n  getItem(id) {\r\n    return (updatesCache.comments[id] || updatesCache.stories[id] || null)\r\n  },\r\n\r\n  getComment(id) {\r\n    return (updatesCache.comments[id] || null)\r\n  },\r\n\r\n  getStory(id) {\r\n    return (updatesCache.stories[id] || null)\r\n  }\r\n})\r\nUpdatesStore.off = UpdatesStore.removeListener\r\n\r\nexport default UpdatesStore\r\n","var {EventEmitter} = require('events')\r\n\r\nvar HNService = require('../services/HNService').default\r\n\r\nvar extend = require('../utils/extend').default\r\n\r\nvar ID_REGEXP = /^\\d+$/\r\n\r\n/**\r\n * Firebase reference used to stream updates - only one StoryStore instance can\r\n * be active at a time.\r\n */\r\nvar firebaseRef = null\r\n\r\n// Cache objects shared among StoryStore instances, also accessible via static\r\n// functions on the StoryStore constructor.\r\n\r\n/**\r\n * Story ids by type, in rank order. Persisted to sessionStorage.\r\n * @type Object.<type, Array.<id>>\r\n */\r\nvar idCache = {}\r\n\r\n/**\r\n * Item cache. Persisted to sessionStorage.\r\n * @type Object.<id, item>\r\n */\r\nvar itemCache = {}\r\n\r\n/**\r\n * Story items in rank order for display, by type.\r\n * @type Object.<type, Array.<item>>\r\n */\r\nvar storyLists = {}\r\n\r\n/**\r\n * Populate the story list for the given story type from the cache.\r\n */\r\nfunction populateStoryList(type) {\r\n  var ids = idCache[type]\r\n  var storyList = storyLists[type]\r\n  for (var i = 0, l = ids.length; i < l; i++) {\r\n    storyList[i] = itemCache[ids[i]] || null\r\n  }\r\n}\r\n\r\nfunction parseJSON(json, defaultValue) {\r\n  return (json ? JSON.parse(json) : defaultValue)\r\n}\r\n\r\nclass StoryStore extends EventEmitter {\r\n  constructor(type) {\r\n    super()\r\n    this.type = type\r\n\r\n    // Ensure cache objects for this type are initialised\r\n    if (!(type in idCache)) {\r\n      idCache[type] = []\r\n    }\r\n    if (!(type in storyLists)) {\r\n      storyLists[type] = []\r\n      populateStoryList(type)\r\n    }\r\n\r\n    // Pre-bind event handlers per instance\r\n    this.onStorage = this.onStorage.bind(this)\r\n    this.onStoriesUpdated = this.onStoriesUpdated.bind(this)\r\n  }\r\n\r\n  getState() {\r\n    return {\r\n      ids: idCache[this.type],\r\n      stories: storyLists[this.type]\r\n    }\r\n  }\r\n\r\n  itemUpdated(item, index) {\r\n    storyLists[this.type][index] = item\r\n    itemCache[item.id] = item\r\n  }\r\n\r\n  /**\r\n   * Emit an item id event if a storage key corresponding to an item in the\r\n   * cache has changed.\r\n   */\r\n  onStorage(e) {\r\n    if (itemCache[e.key]) {\r\n      this.emit(e.key)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle story id snapshots from Firebase.\r\n   */\r\n  onStoriesUpdated(snapshot) {\r\n    idCache[this.type] = snapshot.val()\r\n    populateStoryList(this.type)\r\n    this.emit('update', this.getState())\r\n  }\r\n\r\n  start() {\r\n    if (this.type === 'read') {\r\n      var readStoryIds = Object.keys(window.localStorage)\r\n        .filter(key => ID_REGEXP.test(key))\r\n        .map(id => Number(id))\r\n        .sort((a, b) => b - a)\r\n      setImmediate(() => this.onStoriesUpdated({val: () => readStoryIds}))\r\n    }\r\n    else {\r\n      firebaseRef = HNService.storiesRef(this.type)\r\n      firebaseRef.on('value', this.onStoriesUpdated)\r\n    }\r\n    window.addEventListener('storage', this.onStorage)\r\n  }\r\n\r\n  stop() {\r\n    if (firebaseRef !== null) {\r\n      firebaseRef.off()\r\n      firebaseRef = null\r\n    }\r\n    window.removeEventListener('storage', this.onStorage)\r\n  }\r\n}\r\n\r\n// Static, cache-related functions\r\nextend(StoryStore, {\r\n  /**\r\n   * Get an item from the cache.\r\n   */\r\n  getItem(id) {\r\n    return itemCache[id] || null\r\n  },\r\n\r\n  /**\r\n   * Deserialise caches from sessionStorage.\r\n   */\r\n  loadSession() {\r\n    idCache = parseJSON(window.sessionStorage.idCache, {})\r\n    itemCache = parseJSON(window.sessionStorage.itemCache, {})\r\n  },\r\n\r\n  /**\r\n   * Serialise caches to sessionStorage as JSON.\r\n   */\r\n  saveSession() {\r\n    window.sessionStorage.idCache = JSON.stringify(idCache)\r\n    window.sessionStorage.itemCache = JSON.stringify(itemCache)\r\n  }\r\n})\r\n\r\nexport default StoryStore\r\n","var React = require('react')\r\nvar Link = require('react-router/lib/Link')\r\nvar TimeAgo = require('react-timeago').default\r\n\r\nvar SettingsStore = require('../stores/SettingsStore').default\r\nvar pluralise = require('../utils/pluralise').default\r\nvar urlParse = require('url-parse')\r\n\r\nvar parseHost = function(url) {\r\n  var hostname = (urlParse(url, true)).hostname\r\n  var parts = hostname.split('.').slice(-3)\r\n  if (parts[0] === 'www') {\r\n    parts.shift()\r\n  }\r\n  return parts.join('.')\r\n}\r\n\r\n/**\r\n * Reusable logic for displaying an item.\r\n */\r\nvar ItemMixin = {\r\n  /**\r\n   * Render an item's metadata bar.\r\n   */\r\n  renderItemMeta(item, extraContent) {\r\n    var itemDate = new Date(item.time * 1000)\r\n\r\n    if (item.type === 'job') {\r\n      return <div className=\"Item__meta\">\r\n        <TimeAgo date={itemDate} className=\"Item__time\"/>\r\n      </div>\r\n    }\r\n\r\n    return <div className=\"Item__meta\">\r\n      <span className=\"Item__score\">\r\n        {item.score} point{pluralise(item.score)}\r\n      </span>{' '}\r\n      <span className=\"Item__by\">\r\n        by <Link to={`/user/${item.by}`}>{item.by}</Link>\r\n      </span>{' '}\r\n      <TimeAgo date={itemDate} className=\"Item__time\"/>\r\n      {' | '}\r\n      <Link to={`/${item.type}/${item.id}`}>\r\n        {item.descendants > 0 ? item.descendants + ' comment' + pluralise(item.descendants) : 'discuss'}\r\n      </Link>\r\n      {extraContent}\r\n    </div>\r\n  },\r\n\r\n  /**\r\n   * Render an item's title bar.\r\n   */\r\n  renderItemTitle(item) {\r\n    var hasURL = !!item.url\r\n    var title\r\n    if (item.dead) {\r\n      title = '[dead] ' + item.title\r\n    }\r\n    else {\r\n      title = (hasURL ? <a href={item.url}>{item.title}</a>\r\n        : <Link to={`/${item.type}/${item.id}`}>{item.title}</Link>)\r\n    }\r\n    return <div className=\"Item__title\" style={{fontSize: `${SettingsStore.titleFontSize}px`}}>\r\n      {title}\r\n      {hasURL && ' '}\r\n      {hasURL && <span className=\"Item__host\">({parseHost(item.url)})</span>}\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default ItemMixin\r\n","var React = require('react')\r\nvar Link = require('react-router/lib/Link')\r\nvar TimeAgo = require('react-timeago').default\r\n\r\nvar ItemStore = require('../stores/ItemStore').default\r\nvar SettingsStore = require('../stores/SettingsStore').default\r\n\r\nvar Spinner = require('../Spinner').default\r\n\r\nvar pluralise = require('../utils/pluralise').default\r\n\r\nvar CommentMixin = {\r\n  fetchAncestors(comment) {\r\n    ItemStore.fetchCommentAncestors(comment, result => {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.info(\r\n          'fetchAncestors(' + comment.id + ') took ' +\r\n          result.timeTaken + ' ms for ' +\r\n          result.itemCount + ' item' + pluralise(result.itemCount) + ' with ' +\r\n          result.cacheHits + ' cache hit' + pluralise(result.cacheHits) + ' (' +\r\n          (result.cacheHits / result.itemCount * 100).toFixed(1) + '%)'\r\n        )\r\n      }\r\n      if (!this.isMounted()) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          console.info(\"...but the comment isn't mounted\")\r\n        }\r\n        // Too late - the comment or the user has moved elsewhere\r\n        return\r\n      }\r\n      this.setState({\r\n        parent: result.parent,\r\n        op: result.op\r\n      })\r\n    })\r\n  },\r\n\r\n  renderCommentLoading(comment) {\r\n    return <div className={'Comment Comment--loading Comment--level' + this.props.level}>\r\n      {(this.props.loadingSpinner || comment.delayed) && <Spinner size=\"20\"/>}\r\n      {comment.delayed && <div className=\"Comment__text\">\r\n        Unable to load comment &ndash; this usually indicates the author has configured a delay.\r\n        Trying again in 30 seconds.\r\n      </div>}\r\n    </div>\r\n  },\r\n\r\n  renderCommentDeleted(comment, options) {\r\n    return <div className={options.className}>\r\n      <div className=\"Comment__content\">\r\n        <div className=\"Comment__meta\">\r\n          [deleted] | <a href={'https://news.ycombinator.com/item?id=' + comment.id}>view on Hacker News</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  },\r\n\r\n  renderError(comment, options) {\r\n    return <div className={options.className}>\r\n      <div className=\"Comment__content\">\r\n        <div className=\"Comment__meta\">\r\n          [error] | comment is {JSON.stringify(comment)} | <a href={'https://news.ycombinator.com/item?id=' + options.id}>view on Hacker News</a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  },\r\n\r\n  renderCollapseControl(collapsed) {\r\n    return <span className=\"Comment__collapse\" onClick={this.toggleCollapse} onKeyPress={this.toggleCollapse} tabIndex=\"0\">\r\n      [{collapsed ? '+' : '–'}]\r\n    </span>\r\n  },\r\n\r\n  /**\r\n   * @param options.collapsible {Boolean} if true, assumes this.toggleCollspse()\r\n   * @param options.collapsed {Boolean}\r\n   * @param options.link {Boolean}\r\n   * @param options.parent {Boolean} if true, assumes this.state.parent\r\n   * @param options.op {Boolean} if true, assumes this.state.op\r\n   * @param options.childCounts {Object} with .children and .newComments\r\n   */\r\n  renderCommentMeta(comment, options) {\r\n    if (comment.dead && !SettingsStore.showDead) {\r\n      return <div className=\"Comment__meta\">\r\n        {options.collapsible && this.renderCollapseControl(options.collapsed)}\r\n        {options.collapsible && ' '}\r\n        [dead]\r\n        {options.childCounts && ' | (' + options.childCounts.children + ' child' + pluralise(options.childCounts.children, ',ren')}\r\n        {options.childCounts && options.childCounts.newComments > 0 && ', '}\r\n        {options.childCounts && options.childCounts.newComments > 0 && <em>{options.childCounts.newComments} new</em>}\r\n        {options.childCounts && ')'}\r\n      </div>\r\n    }\r\n\r\n    return <div className=\"Comment__meta\">\r\n      {options.collapsible && this.renderCollapseControl(options.collapsed)}\r\n      {options.collapsible && ' '}\r\n      <Link to={`/user/${comment.by}`} className=\"Comment__user\">{comment.by}</Link>{' '}\r\n      <TimeAgo date={comment.time * 1000}/>\r\n      {options.link && ' | '}\r\n      {options.link && <Link to={`/comment/${comment.id}`}>link</Link>}\r\n      {options.parent && ' | '}\r\n      {options.parent && <Link to={`/${this.state.parent.type}/${comment.parent}`}>parent</Link>}\r\n      {options.op && ' | on: '}\r\n      {options.op && <Link to={`/${this.state.op.type}/${this.state.op.id}`}>{this.state.op.title}</Link>}\r\n      {comment.dead && ' | [dead]'}\r\n      {options.childCounts && ' | (' + options.childCounts.children + ' child' + pluralise(options.childCounts.children, ',ren')}\r\n      {options.childCounts && options.childCounts.newComments > 0 && ', '}\r\n      {options.childCounts && options.childCounts.newComments > 0 && <em>{options.childCounts.newComments} new</em>}\r\n      {options.childCounts && ')'}\r\n    </div>\r\n  },\r\n\r\n  renderCommentText(comment, options) {\r\n    return <div className=\"Comment__text\">\r\n      {(!comment.dead || SettingsStore.showDead) ? <div dangerouslySetInnerHTML={{__html: comment.text}}/> : '[dead]'}\r\n      {SettingsStore.replyLinks && options.replyLink && !comment.dead && <p>\r\n        <a href={`https://news.ycombinator.com/reply?id=${comment.id}`}>reply</a>\r\n      </p>}\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default CommentMixin\r\n","var extend = require('../utils/extend').default\r\n\r\nfunction CommentThreadStore(item, onCommentsChanged) {\r\n  this.itemId = item.id\r\n  this.onCommentsChanged = onCommentsChanged\r\n\r\n  /**\r\n   * Lookup from a comment id to the comment.\r\n   * @type {Object.<id,Comment>}\r\n   */\r\n  this.comments = {}\r\n\r\n  /**\r\n   * Lookup from a comment id to its child comment ids.\r\n   * @type {Object.<id,Array.<Number>>}\r\n   */\r\n  this.children = {}\r\n  this.children[item.id] = []\r\n\r\n  /**\r\n   * Lookup for new comment ids. Will only contain true.\r\n   * @type {Object.<id,Boolean>}\r\n   */\r\n  this.isNew = {}\r\n\r\n  /**\r\n   * Lookup for collapsed state of comment ids. May contain true or false.\r\n   * @type {Object.<id,Boolean>}\r\n   */\r\n  this.isCollapsed = {}\r\n\r\n  /**\r\n   * Lookup for dead comment ids\r\n   * @type {Object.<id,Boolean>}\r\n   */\r\n  this.deadComments = {}\r\n}\r\n\r\nextend(CommentThreadStore.prototype, {\r\n  /**\r\n   * Get counts of children and new comments under the given comment.\r\n   * @return .children {Number}\r\n   * @return .newComments {Number}\r\n   */\r\n  getChildCounts(comment) {\r\n    var childCount = 0\r\n    var newCommentCount = 0\r\n    var nodes = [comment.id]\r\n\r\n    while (nodes.length) {\r\n      var nextNodes = []\r\n      for (var i = 0, l = nodes.length; i < l; i++) {\r\n        var nodeChildren = this.children[nodes[i]]\r\n        if (nodeChildren.length) {\r\n          nextNodes.push.apply(nextNodes, nodeChildren)\r\n        }\r\n      }\r\n      for (i = 0, l = nextNodes.length; i < l; i++) {\r\n        if (this.isNew[nextNodes[i]]) {\r\n          newCommentCount++\r\n        }\r\n      }\r\n      childCount += nextNodes.length\r\n      nodes = nextNodes\r\n    }\r\n\r\n    return {\r\n      children: childCount,\r\n      newComments: newCommentCount\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Register a comment's appearance in the thread.\r\n   */\r\n  commentAdded(comment) {\r\n    if (comment.deleted) { return }\r\n\r\n    this.comments[comment.id] = comment\r\n    this.children[comment.id] = []\r\n    this.children[comment.parent].push(comment.id)\r\n    if (comment.dead) {\r\n      this.deadComments[comment.id] = true\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Register a comment's deletion from the thread.\r\n   */\r\n  commentDeleted(comment) {\r\n    // Comments which initially failed to load (null from Firebase API) can be\r\n    // deleted by the time the API catches up.\r\n    if (!comment) { return }\r\n\r\n    delete this.comments[comment.id]\r\n    var siblings = this.children[comment.parent]\r\n    siblings.splice(siblings.indexOf(comment.id), 1)\r\n    if (comment.dead) {\r\n      delete this.deadComments[comment.id]\r\n    }\r\n  },\r\n\r\n  toggleCollapse(commentId) {\r\n    this.isCollapsed[commentId] = !this.isCollapsed[commentId]\r\n    this.onCommentsChanged({type: 'collapse'})\r\n  }\r\n})\r\n\r\nexport default CommentThreadStore\r\n","var CommentThreadStore = require('./CommentThreadStore').default\r\nvar SettingsStore = require('./SettingsStore').default\r\n\r\nvar debounce = require('../utils/cancellableDebounce').default\r\nvar extend = require('../utils/extend').default\r\nvar pluralise = require('../utils/pluralise').default\r\nvar storage = require('../utils/storage').default\r\n\r\n/**\r\n * Load persisted comment thread state.\r\n * @return .lastVisit {Date} null if the item hasn't been visited before.\r\n * @return .commentCount {Number} 0 if the item hasn't been visited before.\r\n * @return .maxCommentId {Number} 0 if the item hasn't been visited before.\r\n */\r\nfunction loadState(itemId) {\r\n  var json = storage.get(itemId)\r\n  if (json) {\r\n    return JSON.parse(json)\r\n  }\r\n  return {\r\n    lastVisit: null,\r\n    commentCount: 0,\r\n    maxCommentId: 0\r\n  }\r\n}\r\n\r\nfunction StoryCommentThreadStore(item, onCommentsChanged, options) {\r\n  CommentThreadStore.call(this, item, onCommentsChanged)\r\n  this.startedLoading = Date.now()\r\n\r\n  /** Lookup from a comment id to its parent comment id. */\r\n  this.parents = {}\r\n  /** The number of comments which have loaded. */\r\n  this.commentCount = 0\r\n  /** The number of new comments which have loaded. */\r\n  this.newCommentCount = 0\r\n  /** The max comment id seen by the store. */\r\n  this.maxCommentId = 0\r\n  /** Has the comment thread finished loading? */\r\n  this.loading = true\r\n  /** The number of comments we're expecting to load. */\r\n  this.expectedComments = item.kids ? item.kids.length : 0\r\n  /**\r\n   * The number of descendants the story has according to the API.\r\n   * This count includes deleted comments, which aren't accessible via the API,\r\n   * so a thread with deleted comments (example story id: 9273709) will never\r\n   * load this number of comments\r\n   * However, we still need to persist the last known descendant count in order\r\n   * to determine how many new comments there are when displaying the story on a\r\n   * list page.\r\n   */\r\n  this.itemDescendantCount = item.descendants\r\n\r\n  var initialState = loadState(item.id)\r\n  /** Time of last visit to the story. */\r\n  this.lastVisit = initialState.lastVisit\r\n  /** Max comment id on the last visit - determines which comments are new. */\r\n  this.prevMaxCommentId = initialState.maxCommentId\r\n  /** Is this the user's first time viewing the story? */\r\n  this.isFirstVisit = (initialState.lastVisit === null)\r\n\r\n  // Trigger an immediate check for thread load completion if the item was not\r\n  // retrieved from the cache, so is the latest version. This completes page\r\n  // loading immediately for items which have no comments yet.\r\n  if (!options.cached) {\r\n    this.checkLoadCompletion()\r\n  }\r\n}\r\n\r\nStoryCommentThreadStore.loadState = loadState\r\n\r\nStoryCommentThreadStore.prototype = extend(Object.create(CommentThreadStore.prototype), {\r\n  constructor: StoryCommentThreadStore,\r\n\r\n  /**\r\n   * Callback to the item component with updated comment counts, debounced as\r\n   * comments will be loading frequently on initial load.\r\n   */\r\n  numberOfCommentsChanged: debounce(function() {\r\n    this.onCommentsChanged({type: 'number'})\r\n  }, 123),\r\n\r\n  /**\r\n   * If we don't have a last visit time stored for an item, it must have been\r\n   * visited for the first time. Once it finishes loading, establish the last\r\n   * visit time and max comment id which will be used to track and display new\r\n   * comments.\r\n   */\r\n  firstLoadComplete() {\r\n    this.lastVisit = Date.now()\r\n    this.prevMaxCommentId = this.maxCommentId\r\n    this.isFirstVisit = false\r\n    this.onCommentsChanged({type: 'first_load_complete'})\r\n  },\r\n\r\n  /**\r\n   * Check whether the number of comments has reached the expected number yet.\r\n   */\r\n  checkLoadCompletion() {\r\n    if (this.loading && this.commentCount >= this.expectedComments) {\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        console.info(\r\n          'Initial load of ' +\r\n           this.commentCount + ' comment' + pluralise(this.commentCount) +\r\n          ' for ' + this.itemId + ' took ' +\r\n          ((Date.now() - this.startedLoading) / 1000).toFixed(2) + 's'\r\n        )\r\n      }\r\n      this.loading = false\r\n      if (this.isFirstVisit) {\r\n        this.firstLoadComplete()\r\n      }\r\n      else if (SettingsStore.autoCollapse && this.newCommentCount > 0) {\r\n        this.collapseThreadsWithoutNewComments()\r\n      }\r\n      this._storeState()\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Persist comment thread state.\r\n   */\r\n  _storeState() {\r\n    storage.set(this.itemId, JSON.stringify({\r\n      lastVisit: Date.now(),\r\n      commentCount: this.itemDescendantCount,\r\n      maxCommentId: this.maxCommentId\r\n    }))\r\n  },\r\n\r\n  /**\r\n   * The item this comment thread belongs to got updated.\r\n   */\r\n  itemUpdated(item) {\r\n    this.itemDescendantCount = item.descendants\r\n  },\r\n\r\n  /**\r\n   * A comment got loaded initially or added later.\r\n   */\r\n  commentAdded(comment) {\r\n    // Deleted comments don't count towards the comment count\r\n    if (comment.deleted) {\r\n      // Adjust the number of comments expected during the initial page load.\r\n      if (this.loading) {\r\n        this.expectedComments--\r\n        this.checkLoadCompletion()\r\n      }\r\n      return\r\n    }\r\n\r\n    CommentThreadStore.prototype.commentAdded.call(this, comment)\r\n\r\n    // Dead comments don't contribute to the comment count if showDead is off\r\n    if (comment.dead && !SettingsStore.showDead) {\r\n      this.expectedComments--\r\n    }\r\n    else {\r\n      this.commentCount++\r\n    }\r\n    // Add the number of kids the comment has to the expected total for the\r\n    // initial load.\r\n    if (this.loading && comment.kids) {\r\n      this.expectedComments += comment.kids.length\r\n    }\r\n    // Register the comment as new if it's new, unless it's dead and showDead is off\r\n    if (this.prevMaxCommentId > 0 &&\r\n        comment.id > this.prevMaxCommentId &&\r\n        (!comment.dead || SettingsStore.showDead)) {\r\n      this.newCommentCount++\r\n      this.isNew[comment.id] = true\r\n    }\r\n    // Keep track of the biggest comment id seen\r\n    if (comment.id > this.maxCommentId) {\r\n      this.maxCommentId = comment.id\r\n    }\r\n    // We don't want the story to be part of the comment parent hierarchy\r\n    if (comment.parent !== this.itemId) {\r\n      this.parents[comment.id] = comment.parent\r\n    }\r\n\r\n    this.numberOfCommentsChanged()\r\n    if (this.loading) {\r\n      this.checkLoadCompletion()\r\n    }\r\n  },\r\n\r\n  /**\r\n   * A comment which hasn't loaded yet is being delayed.\r\n   */\r\n  commentDelayed(commentId) {\r\n    // Don't wait for delayed comments\r\n    this.expectedComments--\r\n  },\r\n\r\n  /**\r\n   * A comment which wasn't previously deleted became deleted.\r\n   */\r\n  commentDeleted(comment) {\r\n    CommentThreadStore.prototype.commentDeleted.call(this, comment)\r\n    this.commentCount--\r\n    if (this.isNew[comment.id]) {\r\n      this.newCommentCount--\r\n      delete this.isNew[comment.id]\r\n    }\r\n    delete this.parents[comment.id]\r\n    // Trigger debounced callbacks\r\n    this.numberOfCommentsChanged()\r\n  },\r\n\r\n  /**\r\n   * A comment which wasn't previously dead became dead.\r\n   */\r\n  commentDied(comment) {\r\n    if (!SettingsStore.showDead) {\r\n      this.commentCount--\r\n      if (this.isNew[comment.id]) {\r\n        this.newCommentCount--\r\n        delete this.isNew[comment.id]\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Change the expected number of comments if an update was received during\r\n   * initial loding and trigger a re-check of loading completion.\r\n   */\r\n  adjustExpectedComments(change) {\r\n    this.expectedComments += change\r\n    this.checkLoadCompletion()\r\n  },\r\n\r\n  collapseThreadsWithoutNewComments() {\r\n    // Create an id lookup for comments which have a new comment as one of their\r\n    // descendants. New comments themselves are not added to the lookup.\r\n    var newCommentIds = Object.keys(this.isNew)\r\n    var hasNewComments = {}\r\n    for (var i = 0, l = newCommentIds.length; i < l; i++) {\r\n      var parent = this.parents[newCommentIds[i]]\r\n      while (parent) {\r\n        // Stop when we hit one we've seen before\r\n        if (hasNewComments[parent]) {\r\n          break\r\n        }\r\n        hasNewComments[parent] = true\r\n        parent = this.parents[parent]\r\n      }\r\n    }\r\n\r\n    // Walk the tree of comments one level at a time, only walking children to\r\n    // comments we know have new comment descendants, to find subtrees which\r\n    // don't have new comments.\r\n    // Other comments are marked for collapsing unless they are themselves a\r\n    // new comment (in which case all their replies must be new too).\r\n    var shouldCollapse = {}\r\n    var commentIds = this.children[this.itemId]\r\n    while (commentIds.length) {\r\n      var nextCommentIds = []\r\n      for (i = 0, l = commentIds.length; i < l; i++) {\r\n        var commentId = commentIds[i]\r\n        if (!hasNewComments[commentId]) {\r\n          if (!this.isNew[commentId]) {\r\n            shouldCollapse[commentId] = true\r\n          }\r\n        }\r\n        else {\r\n          var childCommentIds = this.children[commentId]\r\n          if (childCommentIds.length) {\r\n            nextCommentIds.push.apply(nextCommentIds, childCommentIds)\r\n          }\r\n        }\r\n      }\r\n      commentIds = nextCommentIds\r\n    }\r\n\r\n    this.isCollapsed = shouldCollapse\r\n    this.onCommentsChanged({type: 'collapse'})\r\n  },\r\n\r\n  getCommentByTimeIndex(timeIndex) {\r\n    var sortedCommentIds = Object.keys(this.comments).map(id => Number(id))\r\n    if (!SettingsStore.showDead) {\r\n      sortedCommentIds = sortedCommentIds.filter(id => !this.deadComments[id])\r\n    }\r\n    sortedCommentIds.sort()\r\n    var commentId = sortedCommentIds[timeIndex - 1]\r\n    return this.comments[commentId]\r\n  },\r\n\r\n  highlightNewCommentsSince(showCommentsAfter) {\r\n    var referenceComment = this.getCommentByTimeIndex(showCommentsAfter)\r\n\r\n    // Walk the tree of comments and create a new isNew lookup for comments\r\n    // newer than the reference comment we're using for highlighting.\r\n    var isNew = {}\r\n    var commentIds = this.children[this.itemId]\r\n    while (commentIds.length) {\r\n      var nextCommentIds = []\r\n      for (var i = 0, l = commentIds.length; i < l; i++) {\r\n        var commentId = commentIds[i]\r\n        if (commentId > referenceComment.id) {\r\n          isNew[commentId] = true\r\n        }\r\n        var childCommentIds = this.children[commentId]\r\n        if (childCommentIds.length) {\r\n          nextCommentIds.push.apply(nextCommentIds, childCommentIds)\r\n        }\r\n      }\r\n      commentIds = nextCommentIds\r\n    }\r\n\r\n    this.isNew = isNew\r\n    this.collapseThreadsWithoutNewComments()\r\n  },\r\n\r\n  /**\r\n   * Merk the thread as read.\r\n   */\r\n  markAsRead() {\r\n    this.lastVisit = Date.now()\r\n    this.newCommentCount = 0\r\n    this.prevMaxCommentId = this.maxCommentId\r\n    this.isNew = {}\r\n    this._storeState()\r\n  },\r\n\r\n  /**\r\n   * Persist comment thread state and perform any necessary internal cleanup.\r\n   */\r\n  dispose() {\r\n    // Cancel debounced callbacks in case any are pending\r\n    this.numberOfCommentsChanged.cancel()\r\n    this._storeState()\r\n  }\r\n})\r\n\r\nexport default StoryCommentThreadStore\r\n","var extend = require('../utils/extend').default\r\nvar storage = require('../utils/storage').default\r\n\r\nvar STORAGE_KEY = 'settings'\r\n\r\nvar SettingsStore = {\r\n  autoCollapse: true,\r\n  replyLinks: true,\r\n  showDead: false,\r\n  showDeleted: false,\r\n  titleFontSize: 18,\r\n  listSpacing: 16,\r\n\r\n  load() {\r\n    var json = storage.get(STORAGE_KEY)\r\n    if (json) {\r\n      extend(this, JSON.parse(json))\r\n    }\r\n  },\r\n\r\n  save() {\r\n    storage.set(STORAGE_KEY, JSON.stringify({\r\n      autoCollapse: this.autoCollapse,\r\n      replyLinks: this.replyLinks,\r\n      showDead: this.showDead,\r\n      showDeleted: this.showDeleted,\r\n      titleFontSize: this.titleFontSize,\r\n      listSpacing: this.listSpacing\r\n    }))\r\n  }\r\n}\r\n\r\nexport default SettingsStore\r\n","function pageCalc(pageNum, pageSize, numItems) {\r\n  var startIndex = (pageNum - 1) * pageSize\r\n  var endIndex = Math.min(numItems, startIndex + pageSize)\r\n  var hasNext = endIndex < numItems - 1\r\n  return {pageNum, startIndex, endIndex, hasNext}\r\n}\r\n\r\nexport default pageCalc\r\n","var React = require('react')\r\nvar Link = require('react-router/lib/Link')\r\n\r\nvar SettingsStore = require('../stores/SettingsStore').default\r\nvar cx = require('../utils/buildClassName').default\r\n\r\n/**\r\n * Reusable logic for displaying an item in a list.\r\n * Must be used in conjunction with ItemMixin for its rendering methods.\r\n */\r\nvar ListItemMixin = {\r\n  getNewCommentCount(item, threadState) {\r\n    if (threadState.lastVisit === null) {\r\n      return 0\r\n    }\r\n    return item.descendants - threadState.commentCount\r\n  },\r\n\r\n  renderListItem(item, threadState) {\r\n    if (item.deleted) { return null }\r\n    var newCommentCount = this.getNewCommentCount(item, threadState)\r\n    return <li className={cx('ListItem', {'ListItem--dead': item.dead})} style={{marginBottom: SettingsStore.listSpacing}}>\r\n      {this.renderItemTitle(item)}\r\n      {this.renderItemMeta(item, (newCommentCount > 0 && <span className=\"ListItem__newcomments\">{' '}\r\n        (<Link to={`/${item.type}/${item.id}`}>\r\n          {newCommentCount} new\r\n        </Link>)\r\n      </span>))}\r\n    </li>\r\n  }\r\n}\r\n\r\nexport default ListItemMixin\r\n","var React = require('react')\r\nvar Link = require('react-router/lib/Link')\r\n\r\nvar Paginator = React.createClass({\r\n  _onClick(e) {\r\n    setTimeout(function() { window.scrollTo(0, 0) }, 0)\r\n  },\r\n\r\n  render() {\r\n    if (this.props.page === 1 && !this.props.hasNext) { return null }\r\n    return <div className=\"Paginator\">\r\n      {this.props.page > 1 && <span className=\"Paginator__prev\">\r\n        <Link to={{pathname: `/${this.props.route}`, query: {page: this.props.page - 1}}} onClick={this._onClick}>Prev</Link>\r\n      </span>}\r\n      {this.props.page > 1 && this.props.hasNext && ' | '}\r\n      {this.props.hasNext && <span className=\"Paginator__next\">\r\n        <Link to={{pathname: `/${this.props.route}`, query: {page: this.props.page + 1}}} onClick={this._onClick}>More</Link>\r\n      </span>}\r\n    </div>\r\n  }\r\n})\r\n\r\nexport default Paginator\r\n"],"sourceRoot":""}