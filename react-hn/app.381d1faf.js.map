{"version":3,"sources":["webpack:///./src/mixins/ListItemMixin.js","webpack:///./src/Paginator.js","webpack:///./src/mixins/PageNumberMixin.js","webpack:///./src/Comment.js","webpack:///./src/stores/ItemStore.js","webpack:///./src/utils/storage.js","webpack:///./src/services/HNService.js","webpack:///./src/NotFound.js","webpack:///./src/UserProfile.js","webpack:///./src/PermalinkedComment.js","webpack:///./src/DisplayComment.js","webpack:///./src/DisplayListItem.js","webpack:///./src/Updates.js","webpack:///./src/StoryListItem.js","webpack:///./src/Stories.js","webpack:///./src/Settings.js","webpack:///./src/App.js","webpack:///./src/PollOption.js","webpack:///./src/utils/cancellableDebounce.js","webpack:///./src/Item.js","webpack:///./src/routes.js","webpack:///./src/Spinner.js","webpack:///./src/index.js","webpack:///./src/utils/setTitle.js","webpack:///./src/utils/buildClassName.js","webpack:///./src/utils/pluralise.js","webpack:///./src/utils/extend.js","webpack:///./src/utils/constants.js","webpack:///./src/stores/UpdatesStore.js","webpack:///./src/stores/StoryStore.js","webpack:///./src/mixins/ItemMixin.js","webpack:///./src/mixins/CommentMixin.js","webpack:///./src/stores/CommentThreadStore.js","webpack:///./src/stores/StoryCommentThreadStore.js","webpack:///./src/stores/SettingsStore.js","webpack:///./src/utils/pageCalc.js"],"names":["__webpack_require__","r","__webpack_exports__","React","require","Link","SettingsStore","default","cx","ListItemMixin","getNewCommentCount","item","threadState","lastVisit","descendants","commentCount","renderListItem","deleted","newCommentCount","this","createElement","className","ListItem--dead","dead","style","marginBottom","listSpacing","renderItemTitle","renderItemMeta","to","type","id","Paginator","createClass","displayName","_onClick","e","setTimeout","window","scrollTo","render","props","page","hasNext","pathname","route","query","onClick","PageNumberMixin","getPageNumber","location","test","Math","max","Number","ReactFireMixin","CommentThreadStore","HNService","CommentMixin","Comment","mixins","propTypes","PropTypes","number","isRequired","level","loadingSpinner","bool","threadStore","instanceOf","getDefaultProps","getInitialState","comment","componentWillMount","bindFirebaseRef","componentWillUnmount","clearDelayTimeout","componentDidUpdate","prevProps","prevState","state","commentDeleted","commentDied","loading","kids","length","prevKids","adjustExpectedComments","delayed","commentAdded","commentDelayed","bindAsObject","itemRef","handleFirebaseRefCancelled","timeout","unbind","forceUpdate","clearTimeout","toggleCollapse","preventDefault","renderError","renderCommentLoading","showDead","showDeleted","renderCommentDeleted","isNew","collapsed","isCollapsed","childCounts","getChildCounts","newComments","Comment--collapsed","Comment--dead","Comment--new","renderCommentMeta","collapsible","link","renderCommentText","replyLink","map","key","setImmediate","StoryStore","UpdatesStore","commentParentLookup","titleCache","fetchCommentParent","cb","result","commentId","parentId","parent","itemCount","cacheHits","op","ItemStore","getItem","title","processCommentParent","cachedItem","getCachedItem","fetchItem","getCachedStory","getStory","fetchCommentAncestors","startTime","Date","now","timeTaken","get","defaultValue","value","localStorage","set","firebase","initializeApp","databaseURL","api","database","ref","once","snapshot","val","child","fetchItems","ids","items","addItem","push","forEach","storiesRef","path","userRef","updatesRef","NotFound","_ref","TimeAgo","Spinner","setTitle","size","UserProfile","user","params","componentWillUpdate","nextProps","nextState","componentWillReceiveProps","createdDate","created","_ref2","date","toDateString","_ref3","karma","_ref4","delay","about","_ref5","dangerouslySetInnerHTML","__html","withRouter","PermalinkedComment","getComment","commentLoaded","setState","router","replace","itemId","handleCommentsChanged","fetchAncestors","by","payload","index","DisplayComment","object","StoryCommentThreadStore","ItemMixin","DisplayListItem","loadState","ITEMS_PER_PAGE","pageCalc","filterDead","filterUpdates","updates","comments","filter","stories","Updates","getUpdates","start","on","handleUpdates","off","stop","isMounted","slice","startIndex","endIndex","pageNum","StoryListItem","store","initLiveItem","removeListener","updateThreadState","itemUpdated","addListener","Stories","limit","string","componentDidMount","handleUpdate","getState","update","dummyItems","i","renderItems","rendered","htmlFor","Settings","refs","container","focus","onChange","el","target","name","checked","save","stopPropagation","tabIndex","autoCollapse","replyLinks","min","step","titleFontSize","_ref6","src","width","height","alt","activeClassName","href","App","showSettings","load","loadSession","addEventListener","handleBeforeUnload","removeEventListener","saveSession","toggleSettings","_ref7","_ref8","_ref9","onKeyPress","_ref10","children","_ref11","pluralise","PollOption","pollopt","text","score","cancellableDebounce","func","wait","immediate","args","context","timestamp","later","last","apply","debounced","arguments","callNow","cancel","timeUnitsAgo","unit","suffix","Item","cached","dispose","kidDiff","collapseThreadsWithoutNewComments","markAsRead","getButtonLabel","showCommentsAfter","showNewCommentsAfter","howMany","timeComment","getCommentByTimeIndex","time","highlightRecentComments","highlightNewCommentsSince","_this","Item--dead","formatter","marginTop","opacity","transition","margin","verticalAlign","parts","IndexRoute","Route","_extends","Ask","Comments","Jobs","New","Show","Best","Top","Read","component","spacing","bounceSize","bounceStyle","marginRight","react_router__WEBPACK_IMPORTED_MODULE_0__","Router","useScroll","applyRouterMiddleware","routes","history","hashHistory","document","getElementById","SITE_TITLE","buildClassName","staticClassName","conditionalClassNames","classNames","classNameKeys","Object","keys","l","join","suffixes","split","extend","dest","src1","src2","UPDATES_CACHE_SIZE","EventEmitter","updatesCache","sortByTimeDesc","a","b","populateUpdates","processCacheObj","cacheObj","arr","obj","sort","cacheObjToSortedArray","splice","updateItemTypes","job","poll","story","handleUpdateItems","emit","json","sessionStorage","JSON","parse","stringify","ID_REGEXP","firebaseRef","idCache","itemCache","storyLists","populateStoryList","storyList","parseJSON","_classCallCheck","_possibleConstructorReturn","_EventEmitter","call","onStorage","bind","onStoriesUpdated","_this2","readStoryIds","urlParse","extraContent","itemDate","url","hasURL","fontSize","hostname","shift","options","renderCollapseControl","onCommentsChanged","deadComments","prototype","childCount","nodes","nextNodes","nodeChildren","siblings","indexOf","debounce","storage","maxCommentId","startedLoading","parents","expectedComments","itemDescendantCount","initialState","prevMaxCommentId","isFirstVisit","checkLoadCompletion","create","constructor","numberOfCommentsChanged","firstLoadComplete","_storeState","change","newCommentIds","hasNewComments","shouldCollapse","commentIds","nextCommentIds","childCommentIds","timeIndex","sortedCommentIds","referenceComment","pageSize","numItems"],"mappings":"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","file":"app.381d1faf.js","sourcesContent":["var React = require('react')\nvar Link = require('react-router/lib/Link')\n\nvar SettingsStore = require('../stores/SettingsStore').default\nvar cx = require('../utils/buildClassName').default\n\n/**\n * Reusable logic for displaying an item in a list.\n * Must be used in conjunction with ItemMixin for its rendering methods.\n */\nvar ListItemMixin = {\n  getNewCommentCount(item, threadState) {\n    if (threadState.lastVisit === null) {\n      return 0\n    }\n    return item.descendants - threadState.commentCount\n  },\n\n  renderListItem(item, threadState) {\n    if (item.deleted) { return null }\n    var newCommentCount = this.getNewCommentCount(item, threadState)\n    return <li className={cx('ListItem', {'ListItem--dead': item.dead})} style={{marginBottom: SettingsStore.listSpacing}}>\n      {this.renderItemTitle(item)}\n      {this.renderItemMeta(item, (newCommentCount > 0 && <span className=\"ListItem__newcomments\">{' '}\n        (<Link to={`/${item.type}/${item.id}`}>\n          {newCommentCount} new\n        </Link>)\n      </span>))}\n    </li>\n  }\n}\n\nexport default ListItemMixin\n","var React = require('react')\nvar Link = require('react-router/lib/Link')\n\nvar Paginator = React.createClass({\n  _onClick(e) {\n    setTimeout(function() { window.scrollTo(0, 0) }, 0)\n  },\n\n  render() {\n    if (this.props.page === 1 && !this.props.hasNext) { return null }\n    return <div className=\"Paginator\">\n      {this.props.page > 1 && <span className=\"Paginator__prev\">\n        <Link to={{pathname: `/${this.props.route}`, query: {page: this.props.page - 1}}} onClick={this._onClick}>Prev</Link>\n      </span>}\n      {this.props.page > 1 && this.props.hasNext && ' | '}\n      {this.props.hasNext && <span className=\"Paginator__next\">\n        <Link to={{pathname: `/${this.props.route}`, query: {page: this.props.page + 1}}} onClick={this._onClick}>More</Link>\n      </span>}\n    </div>\n  }\n})\n\nexport default Paginator\n","var PageNumberMixin = {\n  getPageNumber(page) {\n    if (typeof page == 'undefined') {\n      page = this.props.location.query.page\n    }\n    return (page && /^\\d+$/.test(page) ? Math.max(1, Number(page)) : 1)\n  }\n}\n\nexport default PageNumberMixin\n","var React = require('react')\nvar ReactFireMixin = require('reactfire')\n\nvar CommentThreadStore = require('./stores/CommentThreadStore').default\nvar HNService = require('./services/HNService').default\nvar SettingsStore = require('./stores/SettingsStore').default\n\nvar CommentMixin = require('./mixins/CommentMixin').default\n\nvar cx = require('./utils/buildClassName').default\n\n/**\n * A comment in a thread.\n */\nvar Comment = React.createClass({\n  mixins: [CommentMixin, ReactFireMixin],\n\n  propTypes: {\n    id: React.PropTypes.number.isRequired,\n    level: React.PropTypes.number.isRequired,\n    loadingSpinner: React.PropTypes.bool,\n    threadStore: React.PropTypes.instanceOf(CommentThreadStore).isRequired\n  },\n\n  getDefaultProps() {\n    return {\n      loadingSpinner: false\n    }\n  },\n\n  getInitialState() {\n    return {\n      comment: {}\n    }\n  },\n\n  componentWillMount() {\n    this.bindFirebaseRef()\n  },\n\n  componentWillUnmount() {\n    this.clearDelayTimeout()\n  },\n\n  componentDidUpdate(prevProps, prevState) {\n    // Huge, fast-growing threads like https://news.ycombinator.com/item?id=9784470\n    // seem to break the API - some comments are coming back from Firebase as null.\n    if (!this.state.comment) {\n      this.props.threadStore.adjustExpectedComments(-1)\n      return\n    }\n\n    // On !prevState.comment: a comment which was initially null - see\n    // above - may eventually load when the API catches up.\n    if (!prevState.comment || !prevState.comment.id) {\n      // Register a newly-loaded comment with the thread store\n      if (this.state.comment.id) {\n        // If the comment was delayed, cancel any pending timeout\n        if (prevState.comment && prevState.comment.delayed) {\n          this.clearDelayTimeout()\n        }\n        this.props.threadStore.commentAdded(this.state.comment)\n      }\n      if (prevState.comment && !prevState.comment.delayed && this.state.comment.delayed) {\n        this.props.threadStore.commentDelayed(this.props.id)\n      }\n    }\n    // The comment was already loaded, look for changes to it\n    else {\n      if (!prevState.comment.deleted && this.state.comment.deleted) {\n        this.props.threadStore.commentDeleted(this.state.comment)\n      }\n      if (!prevState.comment.dead && this.state.comment.dead) {\n        this.props.threadStore.commentDied(this.state.comment)\n      }\n      // If the comment has been updated and the initial set of comments is\n      // still loading, the number of expected comments might need to be\n      // adjusted.\n      else if (prevState.comment !== this.state.comment &&\n               this.props.threadStore.loading) {\n        var kids = (this.state.comment.kids ? this.state.comment.kids.length : 0)\n        var prevKids = (prevState.comment.kids ? prevState.comment.kids.length : 0)\n        this.props.threadStore.adjustExpectedComments(kids - prevKids)\n      }\n    }\n  },\n\n  bindFirebaseRef() {\n    this.bindAsObject(HNService.itemRef(this.props.id), 'comment', this.handleFirebaseRefCancelled)\n    if (this.timeout) {\n      this.timeout = null\n    }\n  },\n\n  /**\n   * This is usually caused by a permissions error loading the comment due to\n   * its author using the delay setting (note: this is conjecture), which is\n   * measured in minutes - try again in 30 seconds.\n   */\n  handleFirebaseRefCancelled(e) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error('Firebase ref for comment ' + this.props.id + ' was cancelled: ' + e.message)\n    }\n    this.unbind('comment')\n    this.timeout = setTimeout(this.bindFirebaseRef, 30000)\n    if (this.state.comment && !this.state.comment.delayed) {\n      this.state.comment.delayed = true\n      this.forceUpdate()\n    }\n  },\n\n  clearDelayTimeout() {\n    if (this.timeout) {\n      clearTimeout(this.timeout)\n      this.timeout = null\n    }\n  },\n\n  toggleCollapse(e) {\n    e.preventDefault()\n    this.props.threadStore.toggleCollapse(this.state.comment.id)\n  },\n\n  render() {\n    var comment = this.state.comment\n    var props = this.props\n    if (!comment) {\n      return this.renderError(comment, {\n        id: this.props.id,\n        className: 'Comment Comment--error Comment--level' + props.level\n      })\n    }\n    // Render a placeholder while we're waiting for the comment to load\n    if (!comment.id) { return this.renderCommentLoading(comment) }\n    // Don't show dead coments or their children, when configured\n    if (comment.dead && !SettingsStore.showDead) { return null }\n    // Render a link to HN for deleted comments if they're being displayed\n    if (comment.deleted) {\n      if (!SettingsStore.showDeleted) { return null }\n      return this.renderCommentDeleted(comment, {\n        className: 'Comment Comment--deleted Comment--level' + props.level\n      })\n    }\n\n    var isNew = props.threadStore.isNew[comment.id]\n    var collapsed = !!props.threadStore.isCollapsed[comment.id]\n    var childCounts = (collapsed && props.threadStore.getChildCounts(comment))\n    if (collapsed && isNew) { childCounts.newComments = 0 }\n    var className = cx('Comment Comment--level' + props.level, {\n      'Comment--collapsed': collapsed,\n      'Comment--dead': comment.dead,\n      'Comment--new': isNew\n    })\n\n    return <div className={className}>\n      <div className=\"Comment__content\">\n        {this.renderCommentMeta(comment, {\n          collapsible: true,\n          collapsed: collapsed,\n          link: true,\n          childCounts: childCounts\n        })}\n        {this.renderCommentText(comment, {replyLink: true})}\n      </div>\n      {comment.kids && <div className=\"Comment__kids\">\n        {comment.kids.map(function(id) {\n          return <Comment key={id} id={id}\n            level={props.level + 1}\n            loadingSpinner={props.loadingSpinner}\n            threadStore={props.threadStore}\n          />\n        })}\n      </div>}\n    </div>\n  }\n})\n\nexport default Comment\n","var HNService = require('../services/HNService').default\n\nvar StoryStore = require('./StoryStore').default\nvar UpdatesStore = require('./UpdatesStore').default\nvar commentParentLookup = {}\nvar titleCache = {}\n\nfunction fetchCommentParent(comment, cb, result) {\n  var commentId = comment.id\n  var parentId = comment.parent\n\n  while (commentParentLookup[parentId] || titleCache[parentId]) {\n    // We just saved ourselves an item fetch\n    result.itemCount++\n    result.cacheHits++\n\n    // The parent is a known non-comment\n    if (titleCache[parentId]) {\n      if (result.itemCount === 1) { result.parent = titleCache[parentId] }\n      result.op = titleCache[parentId]\n      cb(result)\n      return\n    }\n\n    // The parent is a known comment\n    if (commentParentLookup[parentId]) {\n      if (result.itemCount === 1) { result.parent = {id: parentId, type: 'comment'} }\n      // Set the parent comment's ids up for the next iteration\n      commentId = parentId\n      parentId = commentParentLookup[parentId]\n    }\n  }\n\n  // The parent of the current comment isn't known, so we'll have to fetch it\n  ItemStore.getItem(parentId, function(parent) {\n    result.itemCount++\n    // Add the current comment's parent to the lookup for next time\n    commentParentLookup[commentId] = parentId\n    if (parent.type === 'comment') {\n      commentParentLookup[parent.id] = parent.parent\n    }\n    processCommentParent(parent, cb, result)\n  }, result)\n}\n\nfunction processCommentParent(item, cb, result) {\n  if (result.itemCount === 1) {\n    result.parent = item\n  }\n  if (item.type !== 'comment') {\n    result.op = item\n    titleCache[item.id] = {\n      id: item.id,\n      type: item.type,\n      title: item.title\n    }\n    cb(result)\n  }\n  else {\n    fetchCommentParent(item, cb, result)\n  }\n}\n\nvar ItemStore = {\n  getItem(id, cb, result) {\n    var cachedItem = this.getCachedItem(id)\n    if (cachedItem) {\n      if (result) {\n        result.cacheHits++\n      }\n      setImmediate(cb, cachedItem)\n    }\n    else {\n      HNService.fetchItem(id, cb)\n    }\n  },\n\n  getCachedItem(id) {\n    return StoryStore.getItem(id) || UpdatesStore.getItem(id) || null\n  },\n\n  getCachedStory(id) {\n    return StoryStore.getItem(id) || UpdatesStore.getStory(id) || null\n  },\n\n  fetchCommentAncestors(comment, cb) {\n    var startTime = Date.now()\n    var result = {itemCount: 0, cacheHits: 0}\n    fetchCommentParent(comment, function() {\n      result.timeTaken = Date.now() - startTime\n      setImmediate(cb, result)\n    }, result)\n  }\n}\n\nexport default ItemStore\n","export default {\n  get(key, defaultValue) {\n    var value = window.localStorage[key]\n    return (typeof value != 'undefined' ? value : defaultValue)\n  },\n  set(key, value) {\n    window.localStorage[key] = value\n  }\n}\n","var firebase = require('firebase/app')\nrequire('firebase/database')\n\nvar config = {\n  databaseURL: 'https://hacker-news.firebaseio.com'\n}\nfirebase.initializeApp(config)\nvar version = '/v0'\nvar api = firebase.database().ref(version)\n\n// https://firebase.google.com/support/guides/firebase-web\n\nfunction fetchItem(id, cb) {\n  itemRef(id).once('value', function(snapshot) {\n    cb(snapshot.val())\n  })\n}\n\nfunction fetchItems(ids, cb) {\n  var items = []\n  ids.forEach(function(id) {\n    fetchItem(id, addItem)\n  })\n  function addItem(item) {\n    items.push(item)\n    if (items.length >= ids.length) {\n      cb(items)\n    }\n  }\n}\n\nfunction storiesRef(path) {\n  return api.child(path)\n}\n\nfunction itemRef(id) {\n  return api.child('item/' + id)\n}\n\nfunction userRef(id) {\n  return api.child('user/' + id)\n}\n\nfunction updatesRef() {\n  return api.child('updates/items')\n}\n\nexport default {\n  fetchItem,\n  fetchItems,\n  storiesRef,\n  itemRef,\n  userRef,\n  updatesRef\n}\n","var React = require('react')\n\nvar NotFound = React.createClass({\n  render() {\n    return <h2>Not found</h2>\n  }\n})\n\nexport default NotFound\n","var React = require('react')\nvar ReactFireMixin = require('reactfire')\nvar TimeAgo = require('react-timeago').default\n\nvar HNService = require('./services/HNService').default\n\nvar Spinner = require('./Spinner').default\n\nvar setTitle = require('./utils/setTitle').default\n\n// TODO User submissions\n\n// TODO User comments\n\nvar UserProfile = React.createClass({\n  mixins: [ReactFireMixin],\n  getInitialState() {\n    return {user: {}}\n  },\n\n  componentWillMount() {\n    this.bindAsObject(HNService.userRef(this.props.params.id), 'user')\n  },\n\n  componentWillUpdate(nextProps, nextState) {\n    if (this.state.user.id !== nextState.user.id) {\n      setTitle('Profile: ' + nextState.user.id)\n    }\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.params.id !== nextProps.params.id) {\n      this.unbind('user')\n      this.bindAsObject(HNService.userRef(nextProps.params.id), 'user')\n    }\n  },\n\n  render() {\n    var user = this.state.user\n    if (!user.id) {\n      return <div className=\"UserProfile UserProfile--loading\">\n        <h4>{this.props.params.id}</h4>\n        <Spinner size=\"20\"/>\n      </div>\n    }\n    var createdDate = new Date(user.created * 1000)\n    return <div className=\"UserProfile\">\n      <h4>{user.id}</h4>\n      <dl>\n        <dt>Created</dt>\n        <dd><TimeAgo date={createdDate}/> ({createdDate.toDateString()})</dd>\n        <dt>Karma</dt>\n        <dd>{user.karma}</dd>\n        <dt>Delay</dt>\n        <dd>{user.delay}</dd>\n        {user.about && <dt>About</dt>}\n        {user.about && <dd><div className=\"UserProfile__about\" dangerouslySetInnerHTML={{__html: user.about}}/></dd>}\n      </dl>\n    </div>\n  }\n})\n\nexport default UserProfile\n","var React = require('react')\nvar ReactFireMixin = require('reactfire')\nvar withRouter = require('react-router/lib/withRouter')\n\nvar CommentThreadStore = require('./stores/CommentThreadStore').default\nvar HNService = require('./services/HNService').default\nvar SettingsStore = require('./stores/SettingsStore').default\nvar UpdatesStore = require('./stores/UpdatesStore').default\n\nvar Comment = require('./Comment').default\nvar CommentMixin = require('./mixins/CommentMixin').default\n\nvar cx = require('./utils/buildClassName').default\nvar setTitle = require('./utils/setTitle').default\n\nvar PermalinkedComment = React.createClass({\n  mixins: [CommentMixin, ReactFireMixin],\n\n  getDefaultProps() {\n    return {\n      level: 0,\n      loadingSpinner: true\n    }\n  },\n\n  getInitialState() {\n    return {\n      comment: UpdatesStore.getComment(this.props.params.id) || {},\n      parent: {type: 'comment'},\n      op: {}\n    }\n  },\n\n  componentWillMount() {\n    this.bindAsObject(HNService.itemRef(this.props.params.id), 'comment')\n    if (this.state.comment.id) {\n      this.commentLoaded(this.state.comment)\n    }\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.params.id !== this.props.params.id) {\n      var comment = UpdatesStore.getComment(nextProps.params.id)\n      if (comment) {\n        this.commentLoaded(comment)\n        this.setState({comment: comment})\n      }\n      this.unbind('comment')\n      this.bindAsObject(HNService.itemRef(nextProps.params.id), 'comment')\n    }\n  },\n\n  componentWillUpdate(nextProps, nextState) {\n    if (!nextState.comment) {\n      return\n    }\n\n    if (this.state.comment.id !== nextState.comment.id) {\n      if (!nextState.comment.deleted) {\n        // Redirect to the appropriate route if a Comment \"parent\" link had a\n        // non-comment item id.\n        if (nextState.comment.type !== 'comment') {\n          this.props.router.replace(`/${nextState.comment.type}/${nextState.comment.id}`)\n          return\n        }\n      }\n      if (!this.threadStore || this.threadStore.itemId !== nextState.comment.id) {\n        this.commentLoaded(nextState.comment)\n      }\n    }\n  },\n\n  commentLoaded(comment) {\n    this.setTitle(comment)\n    if (!comment.deleted) {\n      this.threadStore = new CommentThreadStore(comment, this.handleCommentsChanged)\n      this.fetchAncestors(comment)\n    }\n  },\n\n  setTitle(comment) {\n    if (comment.deleted) {\n      return setTitle('Deleted comment')\n    }\n    var title = 'Comment by ' + comment.by\n    if (this.state.op.id) {\n      title += ' | ' + this.state.op.title\n    }\n    setTitle(title)\n  },\n\n  handleCommentsChanged(payload) {\n    // We're only interested in re-rendering to update collapsed display\n    if (payload.type === 'collapse') {\n      this.forceUpdate()\n    }\n  },\n\n  render() {\n    var comment = this.state.comment\n    if (!comment) {\n      return this.renderError(comment, {\n        id: this.props.params.id,\n        className: 'Comment Comment--level0 Comment--error'\n      })\n    }\n    // Render a placeholder while we're waiting for the comment to load\n    if (!comment.id) { return this.renderCommentLoading(comment) }\n    // Render a link to HN for deleted comments\n    if (comment.deleted) {\n      return this.renderCommentDeleted(comment, {\n        className: 'Comment Comment--level0 Comment--deleted'\n      })\n    }\n    // XXX Don't render anything if we're replacing the route after loading a non-comment\n    if (comment.type !== 'comment') { return null }\n\n    var className = cx('PermalinkedComment Comment Comment--level0', {'Comment--dead': comment.dead})\n    var threadStore = this.threadStore\n\n    return <div className={className}>\n      <div className=\"Comment__content\">\n        {this.renderCommentMeta(comment, {\n          parent: !!this.state.parent.id && !!this.state.op.id && comment.parent !== this.state.op.id,\n          op: !!this.state.op.id\n        })}\n        {(!comment.dead || SettingsStore.showDead) && this.renderCommentText(comment, {replyLink: true})}\n      </div>\n      {comment.kids && <div className=\"Comment__kids\">\n        {comment.kids.map(function(id, index) {\n          return <Comment key={id} id={id}\n            level={0}\n            loadingSpinner={index === 0}\n            threadStore={threadStore}\n          />\n        })}\n      </div>}\n    </div>\n  }\n})\n\nexport default withRouter(PermalinkedComment)\n","var React = require('react')\n\nvar SettingsStore = require('./stores/SettingsStore').default\n\nvar CommentMixin = require('./mixins/CommentMixin').default\n\nvar cx = require('./utils/buildClassName').default\n\n/**\n * Displays a standalone comment passed as a prop.\n */\nvar DisplayComment = React.createClass({\n  mixins: [CommentMixin],\n\n  propTypes: {\n    comment: React.PropTypes.object.isRequired\n  },\n\n  getInitialState() {\n    return {\n      op: {},\n      parent: {type: 'comment'}\n    }\n  },\n\n  componentWillMount() {\n    this.fetchAncestors(this.props.comment)\n  },\n\n  render() {\n    if (this.props.comment.deleted) { return null }\n    if (this.props.comment.dead && !SettingsStore.showDead) { return null }\n\n    var comment = this.props.comment\n    var className = cx('Comment Comment--level0', {\n      'Comment--dead': comment.dead\n    })\n\n    return <div className={className}>\n      <div className=\"Comment__content\">\n        {this.renderCommentMeta(comment, {\n          link: true,\n          parent: !!this.state.parent.id && !!this.state.op.id && comment.parent !== this.state.op.id,\n          op: !!this.state.op.id\n        })}\n        {this.renderCommentText(comment, {replyLink: false})}\n      </div>\n    </div>\n  }\n})\n\nexport default DisplayComment\n","var React = require('react')\n\nvar StoryCommentThreadStore = require('./stores/StoryCommentThreadStore').default\n\nvar ItemMixin = require('./mixins/ItemMixin').default\nvar ListItemMixin = require('./mixins/ListItemMixin').default\n\n/**\n * Display story title and metadata as a list item.\n * The story to display will be passed as a prop.\n */\nvar DisplayListItem = React.createClass({\n  mixins: [ItemMixin, ListItemMixin],\n\n  propTypes: {\n    item: React.PropTypes.object.isRequired\n  },\n\n  componentWillMount() {\n    this.threadState = StoryCommentThreadStore.loadState(this.props.item.id)\n  },\n\n  render() {\n    return this.renderListItem(this.props.item, this.threadState)\n  }\n})\n\nexport default DisplayListItem\n","var React = require('react')\n\nvar SettingsStore = require('./stores/SettingsStore').default\nvar UpdatesStore = require('./stores/UpdatesStore').default\n\nvar DisplayListItem = require('./DisplayListItem').default\nvar DisplayComment = require('./DisplayComment').default\nvar Paginator = require('./Paginator').default\nvar Spinner = require('./Spinner').default\n\nvar PageNumberMixin = require('./mixins/PageNumberMixin').default\n\nvar {ITEMS_PER_PAGE} = require('./utils/constants').default\nvar pageCalc = require('./utils/pageCalc').default\nvar setTitle = require('./utils/setTitle').default\n\nfunction filterDead(item) {\n  return !item.dead\n}\n\nfunction filterUpdates(updates) {\n  if (!SettingsStore.showDead) {\n    return {\n      comments: updates.comments.filter(filterDead),\n      stories: updates.stories.filter(filterDead)\n    }\n  }\n  return updates\n}\n\nvar Updates = React.createClass({\n  mixins: [PageNumberMixin],\n\n  getInitialState() {\n    return filterUpdates(UpdatesStore.getUpdates())\n  },\n\n  componentWillMount() {\n    this.setTitle(this.props.type)\n    UpdatesStore.start()\n    UpdatesStore.on('updates', this.handleUpdates)\n  },\n\n  componentWillUnmount() {\n    UpdatesStore.off('updates', this.handleUpdates)\n    UpdatesStore.stop()\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.type !== nextProps.type) {\n      this.setTitle(nextProps.type)\n    }\n  },\n\n  setTitle(type) {\n    setTitle('New ' + (type === 'comments' ? 'Comments' : 'Links'))\n  },\n\n  handleUpdates(updates) {\n    if (!this.isMounted()) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('Skipping update of ' + this.props.type + ' as the Updates component is not mounted')\n      }\n      return\n    }\n    this.setState(filterUpdates(updates))\n  },\n\n  render() {\n    var items = (this.props.type === 'comments' ? this.state.comments : this.state.stories)\n    if (items.length === 0) {\n      return <div className=\"Updates Updates--loading\"><Spinner size=\"20\"/></div>\n    }\n\n    var page = pageCalc(this.getPageNumber(), ITEMS_PER_PAGE, items.length)\n\n    if (this.props.type === 'comments') {\n      return <div className=\"Updates Comments\">\n        {items.slice(page.startIndex, page.endIndex).map(function(comment) {\n          return <DisplayComment key={comment.id} id={comment.id} comment={comment}/>\n        })}\n        <Paginator route=\"newcomments\" page={page.pageNum} hasNext={page.hasNext}/>\n      </div>\n    }\n    else {\n      return <div className=\"Updates Items\">\n        <ol className=\"Items__list\" start={page.startIndex + 1}>\n          {items.slice(page.startIndex, page.endIndex).map(function(item) {\n            return <DisplayListItem key={item.id} item={item}/>\n          })}\n        </ol>\n        <Paginator route=\"newest\" page={page.pageNum} hasNext={page.hasNext}/>\n      </div>\n    }\n  }\n})\n\nexport default Updates\n","var React = require('react')\nvar ReactFireMixin = require('reactfire')\n\nvar StoryCommentThreadStore = require('./stores/StoryCommentThreadStore').default\nvar HNService = require('./services/HNService').default\nvar SettingsStore = require('./stores/SettingsStore').default\nvar StoryStore = require('./stores/StoryStore').default\n\nvar ItemMixin = require('./mixins/ItemMixin').default\nvar ListItemMixin = require('./mixins/ListItemMixin').default\nvar Spinner = require('./Spinner').default\n\n/**\n * Display story title and metadata as as a list item.\n * Cached story data may be given as a prop, but this component is also\n * responsible for listening to updates to the story and providing the latest\n * version for StoryStore's cache.\n */\nvar StoryListItem = React.createClass({\n  mixins: [ItemMixin, ListItemMixin, ReactFireMixin],\n\n  propTypes: {\n    // The StoryStore handling caching and updates to the stories being displayed\n    store: React.PropTypes.instanceOf(StoryStore).isRequired,\n\n    // The story's id in Hacker News\n    id: React.PropTypes.number,\n    // A version of the story from the cache, for initial display\n    cachedItem: React.PropTypes.object,\n    // The current index of the story in the list being displayed\n    index: React.PropTypes.number\n  },\n\n  getDefaultProps() {\n    return {\n      id: null,\n      cachedItem: null,\n      index: null\n    }\n  },\n\n  getInitialState() {\n    return {\n      item: this.props.cachedItem || {}\n    }\n  },\n\n  componentWillMount() {\n    if (this.props.id != null) {\n      this.initLiveItem(this.props)\n    }\n    else if (this.props.cachedItem != null) {\n      // Display the comment state of the cached item we were given while we're\n      // waiting for the live item to load.\n      this.threadState = StoryCommentThreadStore.loadState(this.state.item.id)\n    }\n  },\n\n  componentWillUnmount() {\n    if (this.props.id != null) {\n      this.props.store.removeListener(this.props.id, this.updateThreadState)\n    }\n  },\n\n  /**\n   * Catch the transition from not having an id prop to having one.\n   * Scenario: we were waiting for the initial list of story ids to load.\n   */\n  componentWillReceiveProps(nextProps) {\n    if (this.props.id == null && nextProps.id != null) {\n      this.initLiveItem(nextProps)\n    }\n  },\n\n  /**\n   * If the live item has been loaded or updated, update the StoryStore cache\n   * with its current index and latest data.\n   */\n  componentWillUpdate(nextProps, nextState) {\n    if (this.state.item !== nextState.item) {\n      if (nextState.item != null) {\n        this.props.store.itemUpdated(nextState.item, this.props.index)\n      }\n      else {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(`Item ${this.props.id} went from ${JSON.stringify(this.state.item)} to ${nextProps.item}`)\n        }\n      }\n    }\n  },\n\n  /**\n   * Initialise listening to updates for the item with the given id and\n   * initialise its comment thread state.\n   */\n  initLiveItem(props) {\n    // If we were given a cached item to display initially, it will be replaced\n    this.bindAsObject(HNService.itemRef(props.id), 'item')\n\n    this.threadState = StoryCommentThreadStore.loadState(props.id)\n    this.props.store.addListener(props.id, this.updateThreadState)\n  },\n\n  /**\n   * Update thread state in response to a storage event indicating it has been\n   * modified.\n   */\n  updateThreadState() {\n    this.threadState = StoryCommentThreadStore.loadState(this.props.id)\n    this.forceUpdate()\n  },\n\n  render() {\n    // Display the loading spinner if we have nothing to show initially\n    if (!this.state.item || !this.state.item.id) {\n      return <li className=\"ListItem ListItem--loading\" style={{marginBottom: SettingsStore.listSpacing}}>\n        <Spinner/>\n      </li>\n    }\n\n    return this.renderListItem(this.state.item, this.threadState)\n  }\n})\n\nexport default StoryListItem\n","var React = require('react')\n\nvar StoryStore = require('./stores/StoryStore').default\n\nvar PageNumberMixin = require('./mixins/PageNumberMixin').default\nvar Paginator = require('./Paginator').default\nvar Spinner = require('./Spinner').default\nvar StoryListItem = require('./StoryListItem').default\nvar SettingsStore = require('./stores/SettingsStore').default\n\nvar {ITEMS_PER_PAGE} = require('./utils/constants').default\nvar pageCalc = require('./utils/pageCalc').default\nvar setTitle = require('./utils/setTitle').default\n\nvar Stories = React.createClass({\n  mixins: [PageNumberMixin],\n\n  propTypes: {\n    // The number of stories which may be paginated through\n    limit: React.PropTypes.number.isRequired,\n    // The route name being used\n    route: React.PropTypes.string.isRequired,\n    // The type of stories to be displayed\n    type: React.PropTypes.string.isRequired,\n\n    // Page title associated with the stories being displayed\n    title: React.PropTypes.string\n  },\n\n  getInitialState() {\n    return {\n      ids: null,\n      limit: this.props.limit,\n      stories: []\n    }\n  },\n\n  componentDidMount() {\n    setTitle(this.props.title)\n    this.store = new StoryStore(this.props.type)\n    this.store.addListener('update', this.handleUpdate)\n    this.store.start()\n    this.setState(this.store.getState())\n  },\n\n  componentWillUnmount() {\n    this.store.removeListener('update', this.handleUpdate)\n    this.store.stop()\n    this.store = null\n  },\n\n  handleUpdate(update) {\n    if (!this.isMounted()) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn(\n          `Skipping update as the ${this.props.type} Stories component is no longer mounted.`\n        )\n      }\n      return\n    }\n    update.limit = update.ids.length\n    this.setState(update)\n  },\n\n  render() {\n    var page = pageCalc(this.getPageNumber(), ITEMS_PER_PAGE, this.state.limit)\n\n    // Special case for the Read Stories page, as its ids are read from\n    // localStorage and there might not be any yet.\n    if (this.props.type === 'read') {\n      if (this.state.ids == null) {\n        return <div className=\"Items\"></div>\n      }\n      if (this.state.ids.length === 0) {\n        return <div className=\"Items\">\n          <p>There are no previously read stories to display.</p>\n        </div>\n      }\n    }\n\n    // Display a list of placeholder items while we're waiting for the initial\n    // list of story ids to load from Firebase.\n    if (this.state.ids == null) {\n      var dummyItems = []\n      for (var i = page.startIndex; i < page.endIndex; i++) {\n        dummyItems.push(\n          <li key={i} className=\"ListItem ListItem--loading\" style={{marginBottom: SettingsStore.listSpacing}}>\n            <Spinner/>\n          </li>\n        )\n      }\n      return <div className=\"Items Items--loading\">\n        <ol className=\"Items__list\" start={page.startIndex + 1}>{dummyItems}</ol>\n        <Paginator route={this.props.route} page={page.pageNum} hasNext={page.hasNext}/>\n      </div>\n    }\n\n    return <div className=\"Items\">\n      <ol className=\"Items__list\" start={page.startIndex + 1}>\n        {this.renderItems(page.startIndex, page.endIndex)}\n      </ol>\n      <Paginator route={this.props.route} page={page.pageNum} hasNext={page.hasNext}/>\n    </div>\n  },\n\n  renderItems(startIndex, endIndex) {\n    var rendered = []\n    for (var i = startIndex; i < endIndex; i++) {\n      var item = this.state.stories[i]\n      var id = this.state.ids[i]\n      if (id) {\n        rendered.push(<StoryListItem key={id} id={id} index={i} cachedItem={item} store={this.store}/>)\n      }\n      else {\n        rendered.push(<StoryListItem key={i} cachedItem={item} store={this.store}/>)\n      }\n    }\n    return rendered\n  }\n})\n\nexport default Stories\n","var React = require('react')\n\nvar SettingsStore = require('./stores/SettingsStore').default\n\nvar Settings = React.createClass({\n  componentDidMount() {\n    this.refs.container.focus()\n  },\n\n  onChange(e) {\n    var el = e.target\n    if (el.type === 'checkbox') {\n      SettingsStore[el.name] = el.checked\n    }\n    else if (el.type === 'number' && el.value) {\n      SettingsStore[el.name] = el.value\n    }\n    this.forceUpdate()\n    SettingsStore.save()\n  },\n\n  onClick(e) {\n    e.stopPropagation()\n  },\n\n  render() {\n    return <div ref=\"container\" className=\"Settings\" tabIndex=\"-1\" onClick={this.onClick}>\n      <form onChange={this.onChange}>\n        <div className=\"Settings__setting Settings__setting--checkbox\">\n          <label htmlFor=\"autoCollapse\">\n            <input type=\"checkbox\" name=\"autoCollapse\" id=\"autoCollapse\" checked={SettingsStore.autoCollapse}/> auto collapse\n          </label>\n          <p>Automatically collapse comment threads without new comments on page load.</p>\n        </div>\n        <div className=\"Settings__setting Settings__setting--checkbox\">\n          <label htmlFor=\"replyLinks\">\n            <input type=\"checkbox\" name=\"replyLinks\" id=\"replyLinks\" checked={SettingsStore.replyLinks}/> show reply links\n          </label>\n          <p>Show \"reply\" links to Hacker News</p>\n        </div>\n        <div className=\"Settings__setting Settings__setting--checkbox\">\n          <label htmlFor=\"showDead\">\n            <input type=\"checkbox\" name=\"showDead\" id=\"showDead\" checked={SettingsStore.showDead}/> show dead\n          </label>\n          <p>Show items flagged as dead.</p>\n        </div>\n        <div className=\"Settings__setting Settings__setting--checkbox\">\n          <label htmlFor=\"showDeleted\">\n            <input type=\"checkbox\" name=\"showDeleted\" id=\"showDeleted\" checked={SettingsStore.showDeleted}/> show deleted\n          </label>\n          <p>Show comments flagged as deleted in threads.</p>\n        </div>\n        <div className=\"Settings__setting\">\n          <table>\n            <tbody>\n              <tr>\n                <td><label htmlFor=\"titleFontSize\">title font size:</label></td>\n                <td><input type=\"number\" min=\"14\" step=\"1\" name=\"titleFontSize\" id=\"titleFontSize\" value={SettingsStore.titleFontSize}/></td>\n              </tr>\n              <tr>\n                <td><label htmlFor=\"listSpacing\">list spacing:</label></td>\n                <td><input type=\"number\" min=\"0\" name=\"listSpacing\" id=\"listSpacing\" value={SettingsStore.listSpacing}/></td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </form>\n    </div>\n  }\n})\n\nexport default Settings\n","/* global __VERSION__ */\nvar React = require('react')\nvar Link = require('react-router/lib/Link')\n\nvar Settings = require('./Settings').default\n\nvar StoryStore = require('./stores/StoryStore').default\nvar UpdatesStore = require('./stores/UpdatesStore').default\nvar SettingsStore = require('./stores/SettingsStore').default\n\nvar App = React.createClass({\n  getInitialState() {\n    return {\n      showSettings: false\n    }\n  },\n\n  componentWillMount() {\n    SettingsStore.load()\n    StoryStore.loadSession()\n    UpdatesStore.loadSession()\n    window.addEventListener('beforeunload', this.handleBeforeUnload)\n  },\n\n  componentWillUnmount() {\n    window.removeEventListener('beforeunload', this.handleBeforeUnload)\n  },\n\n  /**\n   * Give stores a chance to persist data to sessionStorage in case this is a\n   * refresh or an external link in the same tab.\n   */\n  handleBeforeUnload() {\n    StoryStore.saveSession()\n    UpdatesStore.saveSession()\n  },\n\n  toggleSettings(e) {\n    e.preventDefault()\n    this.setState({showSettings: !this.state.showSettings})\n  },\n\n  render() {\n    return <div className=\"App\" onClick={this.state.showSettings && this.toggleSettings}>\n      <div className=\"App__wrap\">\n        <div className=\"App__header\">\n          <Link to=\"/news\" className=\"App__homelinkicon\"><img src=\"img/logo.png\" width=\"16\" height=\"16\" alt=\"\" /></Link>{' '}\n          <Link to=\"/news\" activeClassName=\"active\" className=\"App__homelink\">React HN</Link>{' '}\n          <Link to=\"/best\" activeClassName=\"active\">best</Link>{' | '}\n          <Link to=\"/newest\" activeClassName=\"active\">new</Link>{' | '}\n          <Link to=\"/newcomments\" activeClassName=\"active\">comments</Link> {' | '}\n          <Link to=\"/show\" activeClassName=\"active\">show</Link>{' | '}\n          <Link to=\"/ask\" activeClassName=\"active\">ask</Link>{' | '}\n          <Link to=\"/jobs\" activeClassName=\"active\">jobs</Link>{' | '}\n          <Link to=\"/read\" activeClassName=\"active\">read</Link>\n          <a className=\"App__settings\" tabIndex=\"0\" onClick={this.toggleSettings} onKeyPress={this.toggleSettings}>\n            {this.state.showSettings ? 'hide settings' : 'settings'}\n          </a>\n          {this.state.showSettings && <Settings key=\"settings\"/>}\n        </div>\n        <div className=\"App__content\">\n          {this.props.children}\n        </div>\n        <div className=\"App__footer\">\n          {`react-hn v${__VERSION__} | `}\n          <a href=\"https://github.com/insin/react-hn\">insin/react-hn</a>\n        </div>\n      </div>\n    </div>\n  }\n})\n\nexport default App\n","var React = require('react')\nvar ReactFireMixin = require('reactfire')\n\nvar HNService = require('./services/HNService').default\n\nvar Spinner = require('./Spinner').default\n\nvar pluralise = require('./utils/pluralise').default\n\nvar PollOption = React.createClass({\n  mixins: [ReactFireMixin],\n\n  getInitialState() {\n    return {pollopt: {}}\n  },\n\n  componentWillMount() {\n    this.bindAsObject(HNService.itemRef(this.props.id), 'pollopt')\n  },\n\n  render() {\n    var pollopt = this.state.pollopt\n    if (!pollopt.id) { return <div className=\"PollOption PollOption--loading\"><Spinner size=\"20\"/></div> }\n    return <div className=\"PollOption\">\n      <div className=\"PollOption__text\">\n        {pollopt.text}\n      </div>\n      <div className=\"PollOption__score\">\n        {pollopt.score} point{pluralise(pollopt.score)}\n      </div>\n    </div>\n  }\n})\n\nexport default PollOption\n","/**\n * Based on the implementation of _.debounce() from Underscore.js 1.7.0\n * http://underscorejs.org\n * (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Distributed under the MIT license.\n *\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing.\n *\n * The returned function has a .cancel() function which can be used to prevent\n * the debounced functiom being called.\n */\nfunction cancellableDebounce(func, wait, immediate) {\n  var timeout, args, context, timestamp, result\n\n  var later = function() {\n    var last = Date.now() - timestamp\n    if (last < wait && last > 0) {\n      timeout = setTimeout(later, wait - last)\n    }\n    else {\n      timeout = null\n      if (!immediate) {\n        result = func.apply(context, args)\n        if (!timeout) {\n          context = args = null\n        }\n      }\n    }\n  }\n\n  var debounced = function() {\n    context = this\n    args = arguments\n    timestamp = Date.now()\n    var callNow = immediate && !timeout\n    if (!timeout) {\n      timeout = setTimeout(later, wait)\n    }\n    if (callNow) {\n      result = func.apply(context, args)\n      context = args = null\n    }\n    return result\n  }\n\n  debounced.cancel = function() {\n    if (timeout) {\n      clearTimeout(timeout)\n    }\n  }\n\n  return debounced\n}\n\nexport default cancellableDebounce\n","var React = require('react')\nvar ReactFireMixin = require('reactfire')\nvar TimeAgo = require('react-timeago').default\n\nvar HNService = require('./services/HNService').default\nvar StoryCommentThreadStore = require('./stores/StoryCommentThreadStore').default\nvar ItemStore = require('./stores/ItemStore').default\n\nvar Comment = require('./Comment').default\nvar PollOption = require('./PollOption').default\nvar Spinner = require('./Spinner').default\nvar ItemMixin = require('./mixins/ItemMixin').default\n\nvar cx = require('./utils/buildClassName').default\nvar setTitle = require('./utils/setTitle').default\nvar pluralise = require('./utils/pluralise').default\n\nfunction timeUnitsAgo(value, unit, suffix) {\n  if (value === 1) {\n    return unit\n  }\n  return `${value} ${unit}s`\n}\n\nvar Item = React.createClass({\n  mixins: [ItemMixin, ReactFireMixin],\n\n  getInitialState() {\n    return {\n      item: ItemStore.getCachedStory(Number(this.props.params.id)) || {}\n    }\n  },\n\n  componentWillMount() {\n    this.bindAsObject(HNService.itemRef(this.props.params.id), 'item')\n\n    if (this.state.item.id) {\n      this.threadStore = new StoryCommentThreadStore(this.state.item, this.handleCommentsChanged, {cached: true})\n      setTitle(this.state.item.title)\n    }\n    window.addEventListener('beforeunload', this.handleBeforeUnload)\n  },\n\n  componentWillUnmount() {\n    if (this.threadStore) {\n      this.threadStore.dispose()\n    }\n    window.removeEventListener('beforeunload', this.handleBeforeUnload)\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.params.id !== nextProps.params.id) {\n      // Tear it down...\n      this.threadStore.dispose()\n      this.threadStore = null\n      this.unbind('item')\n      // ...and set it up again\n      var item = ItemStore.getCachedStory(Number(nextProps.params.id))\n      if (item) {\n        this.threadStore = new StoryCommentThreadStore(item, this.handleCommentsChanged, {cached: true})\n        setTitle(item.title)\n      }\n\n      this.bindAsObject(HNService.itemRef(nextProps.params.id), 'item')\n      this.setState({item: item || {}})\n    }\n  },\n\n  componentWillUpdate(nextProps, nextState) {\n    // Update the title when the item has loaded.\n    if (!this.state.item.id && nextState.item.id) {\n      setTitle(nextState.item.title)\n    }\n  },\n\n  componentDidUpdate(prevProps, prevState) {\n    // If the state item id changed, an initial or new item must have loaded\n    if (prevState.item.id !== this.state.item.id) {\n      if (!this.threadStore || this.threadStore.itemId !== this.state.item.id) {\n        this.threadStore = new StoryCommentThreadStore(this.state.item, this.handleCommentsChanged, {cached: false})\n        setTitle(this.state.item.title)\n        this.forceUpdate()\n      }\n    }\n    else if (prevState.item !== this.state.item) {\n      // If the item has been updated from Firebase and the initial set\n      // of comments is still loading, the number of expected comments might\n      // need to be adjusted.\n      // This triggers a check for thread load completion, completing it\n      // immediately if a cached item had 0 kids and the latest version from\n      // Firebase also has 0 kids.\n      if (this.threadStore.loading) {\n        var kids = (this.state.item.kids ? this.state.item.kids.length : 0)\n        var prevKids = (prevState.item.kids ? prevState.item.kids.length : 0)\n        var kidDiff = kids - prevKids\n        if (kidDiff !== 0) {\n          this.threadStore.adjustExpectedComments(kidDiff)\n        }\n      }\n      this.threadStore.itemUpdated(this.state.item)\n    }\n  },\n\n  /**\n   * Ensure the last visit time and comment details get stored for this item if\n   * the user refreshes or otherwise navigates off the page.\n   */\n  handleBeforeUnload() {\n    if (this.threadStore) {\n      this.threadStore.dispose()\n    }\n  },\n\n  handleCommentsChanged(payload) {\n    this.forceUpdate()\n  },\n\n  autoCollapse(e) {\n    e.preventDefault()\n    this.threadStore.collapseThreadsWithoutNewComments()\n  },\n\n  markAsRead(e) {\n    e.preventDefault()\n    this.threadStore.markAsRead()\n    this.forceUpdate()\n  },\n\n  getButtonLabel() {\n    var showCommentsAfter = this.state.showNewCommentsAfter || this.threadStore.commentCount - 1\n    var howMany = this.threadStore.commentCount - showCommentsAfter\n    var timeComment = this.threadStore.getCommentByTimeIndex(showCommentsAfter + 1)\n    var text = `highlight ${howMany} comment${pluralise(howMany)} from `\n    return <span>\n      {text}\n      {timeComment && <TimeAgo date={new Date(timeComment.time * 1000)}/>}\n    </span>\n  },\n\n  highlightRecentComments() {\n    var showCommentsAfter = this.state.showNewCommentsAfter || this.threadStore.commentCount - 1\n    this.threadStore.highlightNewCommentsSince(showCommentsAfter)\n  },\n\n  render() {\n    var state = this.state\n    var item = state.item\n    var threadStore = this.threadStore\n    if (!item.id || !threadStore) { return <div className=\"Item Item--loading\"><Spinner size=\"20\"/></div> }\n    return <div className={cx('Item', {'Item--dead': item.dead})}>\n      <div className=\"Item__content\">\n        {this.renderItemTitle(item)}\n        {this.renderItemMeta(item, (threadStore.lastVisit !== null && threadStore.newCommentCount > 0 && <span>{' '}\n          (<em>{threadStore.newCommentCount} new</em> in the last <TimeAgo date={threadStore.lastVisit} formatter={timeUnitsAgo}/>{') | '}\n          <span className=\"control\" tabIndex=\"0\" onClick={this.autoCollapse} onKeyPress={this.autoCollapse} title=\"Collapse threads without new comments\">\n            auto collapse\n          </span>{' | '}\n          <span className=\"control\" tabIndex=\"0\" onClick={this.markAsRead} onKeyPress={this.markAsRead}>\n            mark as read\n          </span>\n        </span>))}\n        <div style={{\n          marginTop: '1em', opacity:\n          !threadStore.loading && threadStore.commentCount > 1 ? 1.0 : 0.0,\n          transition: 'opacity .33s ease-out',\n        }}>\n          <input\n            max={threadStore.commentCount - 1}\n            min={1}\n            style={{margin: 0, verticalAlign: 'middle'}}\n            type=\"range\"\n            value={state.showNewCommentsAfter || threadStore.commentCount - 1}\n            onChange={(e) => {\n              var showNewCommentsAfter = Number(e.target.value)\n              this.setState({showNewCommentsAfter})\n            }}\n          />\n          <button type=\"button\" onClick={this.highlightRecentComments}>\n            {this.getButtonLabel()}\n          </button>\n        </div>\n        {item.text && <div className=\"Item__text\">\n          <div dangerouslySetInnerHTML={{__html: item.text}}/>\n        </div>}\n        {item.type === 'poll' && <div className=\"Item__poll\">\n          {item.parts.map(function(id) {\n            return <PollOption key={id} id={id}/>\n          })}\n        </div>}\n      </div>\n      {item.kids && <div className=\"Item__kids\">\n        {item.kids.map(function(id, index) {\n          return <Comment key={id} id={id} level={0}\n            loadingSpinner={index === 0}\n            threadStore={threadStore}\n          />\n        })}\n      </div>}\n    </div>\n  }\n})\n\nexport default Item\n","var IndexRoute = require('react-router/lib/IndexRoute')\nvar React = require('react')\nvar Route = require('react-router/lib/Route')\nvar Item = require('./Item').default\n// Polyfill require.ensure\nif (typeof require.ensure !== 'function') require.ensure = function(d, c) { c(require) }\n\nvar App = require('./App').default\nvar Stories = require('./Stories').default\nvar Updates = require('./Updates').default\nvar PermalinkedComment = require('./PermalinkedComment').default\nvar UserProfile = require('./UserProfile').default\nvar NotFound = require('./NotFound').default\n\nfunction stories(route, type, limit, title) {\n  return React.createClass({\n    render() {\n      return <Stories {...this.props} key={route} route={route} type={type} limit={limit} title={title}/>\n    }\n  })\n}\n\nfunction updates(type) {\n  return React.createClass({\n    render() {\n      return <Updates {...this.props} key={type} type={type}/>\n    }\n  })\n}\n\nvar Ask = stories('ask', 'askstories', 200, 'Ask')\nvar Comments = updates('comments')\nvar Jobs = stories('jobs', 'jobstories', 200, 'Jobs')\nvar New = stories('newest', 'newstories', 500, 'New Links')\nvar Show = stories('show', 'showstories', 200, 'Show')\nvar Best = stories('best', 'beststories', 500)\nvar Top = stories('news', 'topstories', 500)\nvar Read = stories('read', 'read', 0, 'Read Stories')\n\nexport default <Route path=\"/\" component={App}>\n  <IndexRoute component={Top}/>\n  <Route path=\"news\" component={Top}/>\n  <Route path=\"best\" component={Best}/>\n  <Route path=\"newest\" component={New}/>\n  <Route path=\"show\" component={Show}/>\n  <Route path=\"ask\" component={Ask}/>\n  <Route path=\"jobs\" component={Jobs}/>\n  <Route path=\"read\" component={Read}/>\n  <Route path=\"item/:id\" component={Item}/>\n  <Route path=\"job/:id\" component={Item}/>\n  <Route path=\"poll/:id\" component={Item}/>\n  <Route path=\"story/:id\" component={Item}/>\n  <Route path=\"comment/:id\" component={PermalinkedComment}/>\n  <Route path=\"newcomments\" component={Comments}/>\n  <Route path=\"user/:id\" component={UserProfile}/>\n  <Route path=\"*\" component={NotFound}/>\n</Route>\n","var React = require('react')\n\n// TODO Implement GIF-based fallback for IE9 and another non-animating browsers\n//      See https://github.com/tobiasahlin/SpinKit for how-to\nvar Spinner = React.createClass({\n  getDefaultProps() {\n    return {size: 6, spacing: 2}\n  },\n\n  render() {\n    var bounceSize = this.props.size + 'px'\n    var bounceStyle = {height: bounceSize, width: bounceSize, marginRight: this.props.spacing + 'px'}\n    return <div className=\"Spinner\" style={{width: ((Number(this.props.size) + Number(this.props.spacing)) * 3) + 'px'}}>\n      <div className=\"bounce1\" style={bounceStyle}/>\n      <div className=\"bounce2\" style={bounceStyle}/>\n      <div className=\"bounce3\" style={bounceStyle}/>\n    </div>\n  }\n})\n\nexport default Spinner\n","import {hashHistory} from 'react-router'\n\nrequire('./style.css')\n\nrequire('setimmediate')\n\nvar React = require('react')\nvar {render} = require('react-dom')\nvar Router = require('react-router/lib/Router')\nvar useScroll = require('react-router-scroll/lib/useScroll')\nvar applyRouterMiddleware = require('react-router/lib/applyRouterMiddleware')\n\nvar routes = require('./routes').default\n\nrender(\n  <Router\n    history={hashHistory}\n    render={applyRouterMiddleware(useScroll())}\n    routes={routes}\n  />,\n  document.getElementById('app')\n)\n","var {SITE_TITLE} = require('./constants').default\n\nfunction setTitle(title) {\n  if (typeof document === 'undefined') return\n  document.title = (title ? title + ' | ' + SITE_TITLE : SITE_TITLE)\n}\n\nexport default setTitle\n","/**\n * Creates a className string including some class names conditionally.\n * @param {string=} staticClassName class name(s) which should always be\n *   included.\n * @param {Object.<string, *>} conditionalClassNames an object mapping class\n *   names to a value which indicates if the class name should be included -\n *   class names will be included if their corresponding value is truthy.\n * @return {string}\n */\nfunction buildClassName(staticClassName, conditionalClassNames) {\n  var classNames = []\n  if (typeof conditionalClassNames == 'undefined') {\n    conditionalClassNames = staticClassName\n  }\n  else {\n    classNames.push(staticClassName)\n  }\n  var classNameKeys = Object.keys(conditionalClassNames)\n  for (var i = 0, l = classNameKeys.length; i < l; i++) {\n    if (conditionalClassNames[classNameKeys[i]]) {\n      classNames.push(classNameKeys[i])\n    }\n  }\n  return classNames.join(' ')\n}\n\nexport default buildClassName\n","function pluralise(howMany, suffixes) {\n  return (suffixes || ',s').split(',')[(howMany === 1 ? 0 : 1)]\n}\n\nexport default pluralise\n","function extend(dest, src1, src2) {\n  var props = Object.keys(src1)\n  for (var i = 0, l = props.length; i < l; i++) {\n    dest[props[i]] = src1[props[i]]\n  }\n  if (src2) {\n    props = Object.keys(src2)\n    for (i = 0, l = props.length; i < l; i++) {\n      dest[props[i]] = src2[props[i]]\n    }\n  }\n  return dest\n}\n\nexport default extend\n","export default {\n  ITEMS_PER_PAGE: 30,\n  SITE_TITLE: 'React HN',\n  UPDATES_CACHE_SIZE: 500\n}\n","var EventEmitter = require('events').EventEmitter\n\nvar HNService = require('../services/HNService').default\n\nvar {UPDATES_CACHE_SIZE} = require('../utils/constants').default\nvar extend = require('../utils/extend').default\n\n/**\n * Firebase reference used to stream updates.\n */\nvar updatesRef = null\n\n/**\n * Contains item id -> item cache objects. Persisted to sessionStorage.\n * @prop .comments {Object.<id,item>} comments cache.\n * @prop .stories {Object.<id,item>} story cache.\n */\nvar updatesCache = null\n\n/**\n * Lists of items in reverse chronological order for display.\n * @prop .comments {Array.<item>} comment updates.\n * @prop .stories {Array.<item>} story updates.\n */\nvar updates = {}\n\nfunction sortByTimeDesc(a, b) {\n  return b.time - a.time\n}\n\nfunction cacheObjToSortedArray(obj) {\n  var arr = Object.keys(obj).map(function(id) { return obj[id] })\n  arr.sort(sortByTimeDesc)\n  return arr\n}\n\n/**\n * Populate lists of updates for display from the cache.\n */\nfunction populateUpdates() {\n  updates.comments = processCacheObj(updatesCache.comments)\n  updates.stories = processCacheObj(updatesCache.stories)\n}\n\n/**\n * Create an array of items from a cache object, sorted in reverse chronological\n * order. Evict the oldest items from the cache if it's grown above\n * UPDATES_CACHE_SIZE.\n */\nfunction processCacheObj(cacheObj) {\n  var arr = cacheObjToSortedArray(cacheObj)\n  arr.splice(UPDATES_CACHE_SIZE, Math.max(0, arr.length - UPDATES_CACHE_SIZE))\n     .forEach(function(item) {\n       delete cacheObj[item.id]\n     })\n  return arr\n}\n\n/**\n * Lookup to filter out any items which appear in the updates feed which can't\n * be displayed by the Updates component.\n */\nvar updateItemTypes = {\n  comment: true,\n  job: true,\n  poll: true,\n  story: true\n}\n\n/**\n * Process incoming items from the update stream.\n */\nfunction handleUpdateItems(items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    var item = items[i]\n    // Silently ignore deleted items (because irony)\n    if (item.deleted) { continue }\n\n    if (typeof updateItemTypes[item.type] == 'undefined') {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn(\n          \"An item which can't be displayed by the Updates component was \" +\n          'received in the updates stream: ' + JSON.stringify(item)\n        )\n      }\n      continue\n    }\n\n    if (item.type === 'comment') {\n      updatesCache.comments[item.id] = item\n    }\n    else {\n      updatesCache.stories[item.id] = item\n    }\n  }\n  populateUpdates()\n  UpdatesStore.emit('updates', updates)\n}\n\nvar UpdatesStore = extend(new EventEmitter(), {\n  loadSession() {\n    var json = window.sessionStorage.updates\n    updatesCache = (json ? JSON.parse(json) : {comments: {}, stories: {}})\n    populateUpdates()\n  },\n\n  saveSession() {\n    window.sessionStorage.updates = JSON.stringify(updatesCache)\n  },\n\n  start() {\n    if (updatesRef === null) {\n      updatesRef = HNService.updatesRef()\n      updatesRef.on('value', function(snapshot) {\n        HNService.fetchItems(snapshot.val(), handleUpdateItems)\n      })\n    }\n  },\n\n  stop() {\n    updatesRef.off()\n    updatesRef = null\n  },\n\n  getUpdates() {\n    return updates\n  },\n\n  getItem(id) {\n    return (updatesCache.comments[id] || updatesCache.stories[id] || null)\n  },\n\n  getComment(id) {\n    return (updatesCache.comments[id] || null)\n  },\n\n  getStory(id) {\n    return (updatesCache.stories[id] || null)\n  }\n})\nUpdatesStore.off = UpdatesStore.removeListener\n\nexport default UpdatesStore\n","var {EventEmitter} = require('events')\n\nvar HNService = require('../services/HNService').default\n\nvar extend = require('../utils/extend').default\n\nvar ID_REGEXP = /^\\d+$/\n\n/**\n * Firebase reference used to stream updates - only one StoryStore instance can\n * be active at a time.\n */\nvar firebaseRef = null\n\n// Cache objects shared among StoryStore instances, also accessible via static\n// functions on the StoryStore constructor.\n\n/**\n * Story ids by type, in rank order. Persisted to sessionStorage.\n * @type Object.<type, Array.<id>>\n */\nvar idCache = {}\n\n/**\n * Item cache. Persisted to sessionStorage.\n * @type Object.<id, item>\n */\nvar itemCache = {}\n\n/**\n * Story items in rank order for display, by type.\n * @type Object.<type, Array.<item>>\n */\nvar storyLists = {}\n\n/**\n * Populate the story list for the given story type from the cache.\n */\nfunction populateStoryList(type) {\n  var ids = idCache[type]\n  var storyList = storyLists[type]\n  for (var i = 0, l = ids.length; i < l; i++) {\n    storyList[i] = itemCache[ids[i]] || null\n  }\n}\n\nfunction parseJSON(json, defaultValue) {\n  return (json ? JSON.parse(json) : defaultValue)\n}\n\nclass StoryStore extends EventEmitter {\n  constructor(type) {\n    super()\n    this.type = type\n\n    // Ensure cache objects for this type are initialised\n    if (!(type in idCache)) {\n      idCache[type] = []\n    }\n    if (!(type in storyLists)) {\n      storyLists[type] = []\n      populateStoryList(type)\n    }\n\n    // Pre-bind event handlers per instance\n    this.onStorage = this.onStorage.bind(this)\n    this.onStoriesUpdated = this.onStoriesUpdated.bind(this)\n  }\n\n  getState() {\n    return {\n      ids: idCache[this.type],\n      stories: storyLists[this.type]\n    }\n  }\n\n  itemUpdated(item, index) {\n    storyLists[this.type][index] = item\n    itemCache[item.id] = item\n  }\n\n  /**\n   * Emit an item id event if a storage key corresponding to an item in the\n   * cache has changed.\n   */\n  onStorage(e) {\n    if (itemCache[e.key]) {\n      this.emit(e.key)\n    }\n  }\n\n  /**\n   * Handle story id snapshots from Firebase.\n   */\n  onStoriesUpdated(snapshot) {\n    idCache[this.type] = snapshot.val()\n    populateStoryList(this.type)\n    this.emit('update', this.getState())\n  }\n\n  start() {\n    if (this.type === 'read') {\n      var readStoryIds = Object.keys(window.localStorage)\n        .filter(key => ID_REGEXP.test(key))\n        .map(id => Number(id))\n        .sort((a, b) => b - a)\n      setImmediate(() => this.onStoriesUpdated({val: () => readStoryIds}))\n    }\n    else {\n      firebaseRef = HNService.storiesRef(this.type)\n      firebaseRef.on('value', this.onStoriesUpdated)\n    }\n    window.addEventListener('storage', this.onStorage)\n  }\n\n  stop() {\n    if (firebaseRef !== null) {\n      firebaseRef.off()\n      firebaseRef = null\n    }\n    window.removeEventListener('storage', this.onStorage)\n  }\n}\n\n// Static, cache-related functions\nextend(StoryStore, {\n  /**\n   * Get an item from the cache.\n   */\n  getItem(id) {\n    return itemCache[id] || null\n  },\n\n  /**\n   * Deserialise caches from sessionStorage.\n   */\n  loadSession() {\n    idCache = parseJSON(window.sessionStorage.idCache, {})\n    itemCache = parseJSON(window.sessionStorage.itemCache, {})\n  },\n\n  /**\n   * Serialise caches to sessionStorage as JSON.\n   */\n  saveSession() {\n    window.sessionStorage.idCache = JSON.stringify(idCache)\n    window.sessionStorage.itemCache = JSON.stringify(itemCache)\n  }\n})\n\nexport default StoryStore\n","var React = require('react')\nvar Link = require('react-router/lib/Link')\nvar TimeAgo = require('react-timeago').default\n\nvar SettingsStore = require('../stores/SettingsStore').default\nvar pluralise = require('../utils/pluralise').default\nvar urlParse = require('url-parse')\n\nvar parseHost = function(url) {\n  var hostname = (urlParse(url, true)).hostname\n  var parts = hostname.split('.').slice(-3)\n  if (parts[0] === 'www') {\n    parts.shift()\n  }\n  return parts.join('.')\n}\n\n/**\n * Reusable logic for displaying an item.\n */\nvar ItemMixin = {\n  /**\n   * Render an item's metadata bar.\n   */\n  renderItemMeta(item, extraContent) {\n    var itemDate = new Date(item.time * 1000)\n\n    if (item.type === 'job') {\n      return <div className=\"Item__meta\">\n        <TimeAgo date={itemDate} className=\"Item__time\"/>\n      </div>\n    }\n\n    return <div className=\"Item__meta\">\n      <span className=\"Item__score\">\n        {item.score} point{pluralise(item.score)}\n      </span>{' '}\n      <span className=\"Item__by\">\n        by <Link to={`/user/${item.by}`}>{item.by}</Link>\n      </span>{' '}\n      <TimeAgo date={itemDate} className=\"Item__time\"/>\n      {' | '}\n      <Link to={`/${item.type}/${item.id}`}>\n        {item.descendants > 0 ? item.descendants + ' comment' + pluralise(item.descendants) : 'discuss'}\n      </Link>\n      {extraContent}\n    </div>\n  },\n\n  /**\n   * Render an item's title bar.\n   */\n  renderItemTitle(item) {\n    var hasURL = !!item.url\n    var title\n    if (item.dead) {\n      title = '[dead] ' + item.title\n    }\n    else {\n      title = (hasURL ? <a href={item.url} target=\"_blank\">{item.title}</a>\n        : <Link to={`/${item.type}/${item.id}`}>{item.title}</Link>)\n    }\n    return <div className=\"Item__title\" style={{fontSize: `${SettingsStore.titleFontSize}px`}}>\n      {title}\n      {hasURL && ' '}\n      {hasURL && <span className=\"Item__host\">({parseHost(item.url)})</span>}\n    </div>\n  }\n}\n\nexport default ItemMixin\n","var React = require('react')\nvar Link = require('react-router/lib/Link')\nvar TimeAgo = require('react-timeago').default\n\nvar ItemStore = require('../stores/ItemStore').default\nvar SettingsStore = require('../stores/SettingsStore').default\n\nvar Spinner = require('../Spinner').default\n\nvar pluralise = require('../utils/pluralise').default\n\nvar CommentMixin = {\n  fetchAncestors(comment) {\n    ItemStore.fetchCommentAncestors(comment, result => {\n      if (process.env.NODE_ENV !== 'production') {\n        console.info(\n          'fetchAncestors(' + comment.id + ') took ' +\n          result.timeTaken + ' ms for ' +\n          result.itemCount + ' item' + pluralise(result.itemCount) + ' with ' +\n          result.cacheHits + ' cache hit' + pluralise(result.cacheHits) + ' (' +\n          (result.cacheHits / result.itemCount * 100).toFixed(1) + '%)'\n        )\n      }\n      if (!this.isMounted()) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.info(\"...but the comment isn't mounted\")\n        }\n        // Too late - the comment or the user has moved elsewhere\n        return\n      }\n      this.setState({\n        parent: result.parent,\n        op: result.op\n      })\n    })\n  },\n\n  renderCommentLoading(comment) {\n    return <div className={'Comment Comment--loading Comment--level' + this.props.level}>\n      {(this.props.loadingSpinner || comment.delayed) && <Spinner size=\"20\"/>}\n      {comment.delayed && <div className=\"Comment__text\">\n        Unable to load comment &ndash; this usually indicates the author has configured a delay.\n        Trying again in 30 seconds.\n      </div>}\n    </div>\n  },\n\n  renderCommentDeleted(comment, options) {\n    return <div className={options.className}>\n      <div className=\"Comment__content\">\n        <div className=\"Comment__meta\">\n          [deleted] | <a href={'https://news.ycombinator.com/item?id=' + comment.id}>view on Hacker News</a>\n        </div>\n      </div>\n    </div>\n  },\n\n  renderError(comment, options) {\n    return <div className={options.className}>\n      <div className=\"Comment__content\">\n        <div className=\"Comment__meta\">\n          [error] | comment is {JSON.stringify(comment)} | <a href={'https://news.ycombinator.com/item?id=' + options.id}>view on Hacker News</a>\n        </div>\n      </div>\n    </div>\n  },\n\n  renderCollapseControl(collapsed) {\n    return <span className=\"Comment__collapse\" onClick={this.toggleCollapse} onKeyPress={this.toggleCollapse} tabIndex=\"0\">\n      [{collapsed ? '+' : '–'}]\n    </span>\n  },\n\n  /**\n   * @param options.collapsible {Boolean} if true, assumes this.toggleCollspse()\n   * @param options.collapsed {Boolean}\n   * @param options.link {Boolean}\n   * @param options.parent {Boolean} if true, assumes this.state.parent\n   * @param options.op {Boolean} if true, assumes this.state.op\n   * @param options.childCounts {Object} with .children and .newComments\n   */\n  renderCommentMeta(comment, options) {\n    if (comment.dead && !SettingsStore.showDead) {\n      return <div className=\"Comment__meta\">\n        {options.collapsible && this.renderCollapseControl(options.collapsed)}\n        {options.collapsible && ' '}\n        [dead]\n        {options.childCounts && ' | (' + options.childCounts.children + ' child' + pluralise(options.childCounts.children, ',ren')}\n        {options.childCounts && options.childCounts.newComments > 0 && ', '}\n        {options.childCounts && options.childCounts.newComments > 0 && <em>{options.childCounts.newComments} new</em>}\n        {options.childCounts && ')'}\n      </div>\n    }\n\n    return <div className=\"Comment__meta\">\n      {options.collapsible && this.renderCollapseControl(options.collapsed)}\n      {options.collapsible && ' '}\n      <Link to={`/user/${comment.by}`} className=\"Comment__user\">{comment.by}</Link>{' '}\n      <TimeAgo date={comment.time * 1000}/>\n      {options.link && ' | '}\n      {options.link && <Link to={`/comment/${comment.id}`}>link</Link>}\n      {options.parent && ' | '}\n      {options.parent && <Link to={`/${this.state.parent.type}/${comment.parent}`}>parent</Link>}\n      {options.op && ' | on: '}\n      {options.op && <Link to={`/${this.state.op.type}/${this.state.op.id}`}>{this.state.op.title}</Link>}\n      {comment.dead && ' | [dead]'}\n      {options.childCounts && ' | (' + options.childCounts.children + ' child' + pluralise(options.childCounts.children, ',ren')}\n      {options.childCounts && options.childCounts.newComments > 0 && ', '}\n      {options.childCounts && options.childCounts.newComments > 0 && <em>{options.childCounts.newComments} new</em>}\n      {options.childCounts && ')'}\n    </div>\n  },\n\n  renderCommentText(comment, options) {\n    return <div className=\"Comment__text\">\n      {(!comment.dead || SettingsStore.showDead) ? <div dangerouslySetInnerHTML={{__html: comment.text}}/> : '[dead]'}\n      {SettingsStore.replyLinks && options.replyLink && !comment.dead && <p>\n        <a href={`https://news.ycombinator.com/reply?id=${comment.id}`}>reply</a>\n      </p>}\n    </div>\n  }\n}\n\nexport default CommentMixin\n","var extend = require('../utils/extend').default\n\nfunction CommentThreadStore(item, onCommentsChanged) {\n  this.itemId = item.id\n  this.onCommentsChanged = onCommentsChanged\n\n  /**\n   * Lookup from a comment id to the comment.\n   * @type {Object.<id,Comment>}\n   */\n  this.comments = {}\n\n  /**\n   * Lookup from a comment id to its child comment ids.\n   * @type {Object.<id,Array.<Number>>}\n   */\n  this.children = {}\n  this.children[item.id] = []\n\n  /**\n   * Lookup for new comment ids. Will only contain true.\n   * @type {Object.<id,Boolean>}\n   */\n  this.isNew = {}\n\n  /**\n   * Lookup for collapsed state of comment ids. May contain true or false.\n   * @type {Object.<id,Boolean>}\n   */\n  this.isCollapsed = {}\n\n  /**\n   * Lookup for dead comment ids\n   * @type {Object.<id,Boolean>}\n   */\n  this.deadComments = {}\n}\n\nextend(CommentThreadStore.prototype, {\n  /**\n   * Get counts of children and new comments under the given comment.\n   * @return .children {Number}\n   * @return .newComments {Number}\n   */\n  getChildCounts(comment) {\n    var childCount = 0\n    var newCommentCount = 0\n    var nodes = [comment.id]\n\n    while (nodes.length) {\n      var nextNodes = []\n      for (var i = 0, l = nodes.length; i < l; i++) {\n        var nodeChildren = this.children[nodes[i]]\n        if (nodeChildren.length) {\n          nextNodes.push.apply(nextNodes, nodeChildren)\n        }\n      }\n      for (i = 0, l = nextNodes.length; i < l; i++) {\n        if (this.isNew[nextNodes[i]]) {\n          newCommentCount++\n        }\n      }\n      childCount += nextNodes.length\n      nodes = nextNodes\n    }\n\n    return {\n      children: childCount,\n      newComments: newCommentCount\n    }\n  },\n\n  /**\n   * Register a comment's appearance in the thread.\n   */\n  commentAdded(comment) {\n    if (comment.deleted) { return }\n\n    this.comments[comment.id] = comment\n    this.children[comment.id] = []\n    this.children[comment.parent].push(comment.id)\n    if (comment.dead) {\n      this.deadComments[comment.id] = true\n    }\n  },\n\n  /**\n   * Register a comment's deletion from the thread.\n   */\n  commentDeleted(comment) {\n    // Comments which initially failed to load (null from Firebase API) can be\n    // deleted by the time the API catches up.\n    if (!comment) { return }\n\n    delete this.comments[comment.id]\n    var siblings = this.children[comment.parent]\n    siblings.splice(siblings.indexOf(comment.id), 1)\n    if (comment.dead) {\n      delete this.deadComments[comment.id]\n    }\n  },\n\n  toggleCollapse(commentId) {\n    this.isCollapsed[commentId] = !this.isCollapsed[commentId]\n    this.onCommentsChanged({type: 'collapse'})\n  }\n})\n\nexport default CommentThreadStore\n","var CommentThreadStore = require('./CommentThreadStore').default\nvar SettingsStore = require('./SettingsStore').default\n\nvar debounce = require('../utils/cancellableDebounce').default\nvar extend = require('../utils/extend').default\nvar pluralise = require('../utils/pluralise').default\nvar storage = require('../utils/storage').default\n\n/**\n * Load persisted comment thread state.\n * @return .lastVisit {Date} null if the item hasn't been visited before.\n * @return .commentCount {Number} 0 if the item hasn't been visited before.\n * @return .maxCommentId {Number} 0 if the item hasn't been visited before.\n */\nfunction loadState(itemId) {\n  var json = storage.get(itemId)\n  if (json) {\n    return JSON.parse(json)\n  }\n  return {\n    lastVisit: null,\n    commentCount: 0,\n    maxCommentId: 0\n  }\n}\n\nfunction StoryCommentThreadStore(item, onCommentsChanged, options) {\n  CommentThreadStore.call(this, item, onCommentsChanged)\n  this.startedLoading = Date.now()\n\n  /** Lookup from a comment id to its parent comment id. */\n  this.parents = {}\n  /** The number of comments which have loaded. */\n  this.commentCount = 0\n  /** The number of new comments which have loaded. */\n  this.newCommentCount = 0\n  /** The max comment id seen by the store. */\n  this.maxCommentId = 0\n  /** Has the comment thread finished loading? */\n  this.loading = true\n  /** The number of comments we're expecting to load. */\n  this.expectedComments = item.kids ? item.kids.length : 0\n  /**\n   * The number of descendants the story has according to the API.\n   * This count includes deleted comments, which aren't accessible via the API,\n   * so a thread with deleted comments (example story id: 9273709) will never\n   * load this number of comments\n   * However, we still need to persist the last known descendant count in order\n   * to determine how many new comments there are when displaying the story on a\n   * list page.\n   */\n  this.itemDescendantCount = item.descendants\n\n  var initialState = loadState(item.id)\n  /** Time of last visit to the story. */\n  this.lastVisit = initialState.lastVisit\n  /** Max comment id on the last visit - determines which comments are new. */\n  this.prevMaxCommentId = initialState.maxCommentId\n  /** Is this the user's first time viewing the story? */\n  this.isFirstVisit = (initialState.lastVisit === null)\n\n  // Trigger an immediate check for thread load completion if the item was not\n  // retrieved from the cache, so is the latest version. This completes page\n  // loading immediately for items which have no comments yet.\n  if (!options.cached) {\n    this.checkLoadCompletion()\n  }\n}\n\nStoryCommentThreadStore.loadState = loadState\n\nStoryCommentThreadStore.prototype = extend(Object.create(CommentThreadStore.prototype), {\n  constructor: StoryCommentThreadStore,\n\n  /**\n   * Callback to the item component with updated comment counts, debounced as\n   * comments will be loading frequently on initial load.\n   */\n  numberOfCommentsChanged: debounce(function() {\n    this.onCommentsChanged({type: 'number'})\n  }, 123),\n\n  /**\n   * If we don't have a last visit time stored for an item, it must have been\n   * visited for the first time. Once it finishes loading, establish the last\n   * visit time and max comment id which will be used to track and display new\n   * comments.\n   */\n  firstLoadComplete() {\n    this.lastVisit = Date.now()\n    this.prevMaxCommentId = this.maxCommentId\n    this.isFirstVisit = false\n    this.onCommentsChanged({type: 'first_load_complete'})\n  },\n\n  /**\n   * Check whether the number of comments has reached the expected number yet.\n   */\n  checkLoadCompletion() {\n    if (this.loading && this.commentCount >= this.expectedComments) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.info(\n          'Initial load of ' +\n           this.commentCount + ' comment' + pluralise(this.commentCount) +\n          ' for ' + this.itemId + ' took ' +\n          ((Date.now() - this.startedLoading) / 1000).toFixed(2) + 's'\n        )\n      }\n      this.loading = false\n      if (this.isFirstVisit) {\n        this.firstLoadComplete()\n      }\n      else if (SettingsStore.autoCollapse && this.newCommentCount > 0) {\n        this.collapseThreadsWithoutNewComments()\n      }\n      this._storeState()\n    }\n  },\n\n  /**\n   * Persist comment thread state.\n   */\n  _storeState() {\n    storage.set(this.itemId, JSON.stringify({\n      lastVisit: Date.now(),\n      commentCount: this.itemDescendantCount,\n      maxCommentId: this.maxCommentId\n    }))\n  },\n\n  /**\n   * The item this comment thread belongs to got updated.\n   */\n  itemUpdated(item) {\n    this.itemDescendantCount = item.descendants\n  },\n\n  /**\n   * A comment got loaded initially or added later.\n   */\n  commentAdded(comment) {\n    // Deleted comments don't count towards the comment count\n    if (comment.deleted) {\n      // Adjust the number of comments expected during the initial page load.\n      if (this.loading) {\n        this.expectedComments--\n        this.checkLoadCompletion()\n      }\n      return\n    }\n\n    CommentThreadStore.prototype.commentAdded.call(this, comment)\n\n    // Dead comments don't contribute to the comment count if showDead is off\n    if (comment.dead && !SettingsStore.showDead) {\n      this.expectedComments--\n    }\n    else {\n      this.commentCount++\n    }\n    // Add the number of kids the comment has to the expected total for the\n    // initial load.\n    if (this.loading && comment.kids) {\n      this.expectedComments += comment.kids.length\n    }\n    // Register the comment as new if it's new, unless it's dead and showDead is off\n    if (this.prevMaxCommentId > 0 &&\n        comment.id > this.prevMaxCommentId &&\n        (!comment.dead || SettingsStore.showDead)) {\n      this.newCommentCount++\n      this.isNew[comment.id] = true\n    }\n    // Keep track of the biggest comment id seen\n    if (comment.id > this.maxCommentId) {\n      this.maxCommentId = comment.id\n    }\n    // We don't want the story to be part of the comment parent hierarchy\n    if (comment.parent !== this.itemId) {\n      this.parents[comment.id] = comment.parent\n    }\n\n    this.numberOfCommentsChanged()\n    if (this.loading) {\n      this.checkLoadCompletion()\n    }\n  },\n\n  /**\n   * A comment which hasn't loaded yet is being delayed.\n   */\n  commentDelayed(commentId) {\n    // Don't wait for delayed comments\n    this.expectedComments--\n  },\n\n  /**\n   * A comment which wasn't previously deleted became deleted.\n   */\n  commentDeleted(comment) {\n    CommentThreadStore.prototype.commentDeleted.call(this, comment)\n    this.commentCount--\n    if (this.isNew[comment.id]) {\n      this.newCommentCount--\n      delete this.isNew[comment.id]\n    }\n    delete this.parents[comment.id]\n    // Trigger debounced callbacks\n    this.numberOfCommentsChanged()\n  },\n\n  /**\n   * A comment which wasn't previously dead became dead.\n   */\n  commentDied(comment) {\n    if (!SettingsStore.showDead) {\n      this.commentCount--\n      if (this.isNew[comment.id]) {\n        this.newCommentCount--\n        delete this.isNew[comment.id]\n      }\n    }\n  },\n\n  /**\n   * Change the expected number of comments if an update was received during\n   * initial loding and trigger a re-check of loading completion.\n   */\n  adjustExpectedComments(change) {\n    this.expectedComments += change\n    this.checkLoadCompletion()\n  },\n\n  collapseThreadsWithoutNewComments() {\n    // Create an id lookup for comments which have a new comment as one of their\n    // descendants. New comments themselves are not added to the lookup.\n    var newCommentIds = Object.keys(this.isNew)\n    var hasNewComments = {}\n    for (var i = 0, l = newCommentIds.length; i < l; i++) {\n      var parent = this.parents[newCommentIds[i]]\n      while (parent) {\n        // Stop when we hit one we've seen before\n        if (hasNewComments[parent]) {\n          break\n        }\n        hasNewComments[parent] = true\n        parent = this.parents[parent]\n      }\n    }\n\n    // Walk the tree of comments one level at a time, only walking children to\n    // comments we know have new comment descendants, to find subtrees which\n    // don't have new comments.\n    // Other comments are marked for collapsing unless they are themselves a\n    // new comment (in which case all their replies must be new too).\n    var shouldCollapse = {}\n    var commentIds = this.children[this.itemId]\n    while (commentIds.length) {\n      var nextCommentIds = []\n      for (i = 0, l = commentIds.length; i < l; i++) {\n        var commentId = commentIds[i]\n        if (!hasNewComments[commentId]) {\n          if (!this.isNew[commentId]) {\n            shouldCollapse[commentId] = true\n          }\n        }\n        else {\n          var childCommentIds = this.children[commentId]\n          if (childCommentIds.length) {\n            nextCommentIds.push.apply(nextCommentIds, childCommentIds)\n          }\n        }\n      }\n      commentIds = nextCommentIds\n    }\n\n    this.isCollapsed = shouldCollapse\n    this.onCommentsChanged({type: 'collapse'})\n  },\n\n  getCommentByTimeIndex(timeIndex) {\n    var sortedCommentIds = Object.keys(this.comments).map(id => Number(id))\n    if (!SettingsStore.showDead) {\n      sortedCommentIds = sortedCommentIds.filter(id => !this.deadComments[id])\n    }\n    sortedCommentIds.sort()\n    var commentId = sortedCommentIds[timeIndex - 1]\n    return this.comments[commentId]\n  },\n\n  highlightNewCommentsSince(showCommentsAfter) {\n    var referenceComment = this.getCommentByTimeIndex(showCommentsAfter)\n\n    // Walk the tree of comments and create a new isNew lookup for comments\n    // newer than the reference comment we're using for highlighting.\n    var isNew = {}\n    var commentIds = this.children[this.itemId]\n    while (commentIds.length) {\n      var nextCommentIds = []\n      for (var i = 0, l = commentIds.length; i < l; i++) {\n        var commentId = commentIds[i]\n        if (commentId > referenceComment.id) {\n          isNew[commentId] = true\n        }\n        var childCommentIds = this.children[commentId]\n        if (childCommentIds.length) {\n          nextCommentIds.push.apply(nextCommentIds, childCommentIds)\n        }\n      }\n      commentIds = nextCommentIds\n    }\n\n    this.isNew = isNew\n    this.collapseThreadsWithoutNewComments()\n  },\n\n  /**\n   * Merk the thread as read.\n   */\n  markAsRead() {\n    this.lastVisit = Date.now()\n    this.newCommentCount = 0\n    this.prevMaxCommentId = this.maxCommentId\n    this.isNew = {}\n    this._storeState()\n  },\n\n  /**\n   * Persist comment thread state and perform any necessary internal cleanup.\n   */\n  dispose() {\n    // Cancel debounced callbacks in case any are pending\n    this.numberOfCommentsChanged.cancel()\n    this._storeState()\n  }\n})\n\nexport default StoryCommentThreadStore\n","var extend = require('../utils/extend').default\nvar storage = require('../utils/storage').default\n\nvar STORAGE_KEY = 'settings'\n\nvar SettingsStore = {\n  autoCollapse: true,\n  replyLinks: true,\n  showDead: false,\n  showDeleted: false,\n  titleFontSize: 18,\n  listSpacing: 16,\n\n  load() {\n    var json = storage.get(STORAGE_KEY)\n    if (json) {\n      extend(this, JSON.parse(json))\n    }\n  },\n\n  save() {\n    storage.set(STORAGE_KEY, JSON.stringify({\n      autoCollapse: this.autoCollapse,\n      replyLinks: this.replyLinks,\n      showDead: this.showDead,\n      showDeleted: this.showDeleted,\n      titleFontSize: this.titleFontSize,\n      listSpacing: this.listSpacing\n    }))\n  }\n}\n\nexport default SettingsStore\n","function pageCalc(pageNum, pageSize, numItems) {\n  var startIndex = (pageNum - 1) * pageSize\n  var endIndex = Math.min(numItems, startIndex + pageSize)\n  var hasNext = endIndex < numItems - 1\n  return {pageNum, startIndex, endIndex, hasNext}\n}\n\nexport default pageCalc\n"],"sourceRoot":""}